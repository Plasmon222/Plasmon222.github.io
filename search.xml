<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>String转换为Int类型的方法</title>
      <link href="/2023/05/26/String%E8%BD%AC%E6%8D%A2%E4%B8%BAInt%E7%B1%BB%E5%9E%8B%E7%9A%84%E6%96%B9%E6%B3%95%EF%BC%9A/"/>
      <url>/2023/05/26/String%E8%BD%AC%E6%8D%A2%E4%B8%BAInt%E7%B1%BB%E5%9E%8B%E7%9A%84%E6%96%B9%E6%B3%95%EF%BC%9A/</url>
      
        <content type="html"><![CDATA[<h1 id="String转换为Int类型的方法："><a href="#String转换为Int类型的方法：" class="headerlink" title="String转换为Int类型的方法："></a>String转换为Int类型的方法：</h1><p>在 Integer 类内部包含一些和 int 类型操作有关的方法，表 1 列出了这些常用的方法。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> k=<span class="number">90</span>;</span><br><span class="line">String str=String.valueOf(k);</span><br><span class="line">String sr=<span class="string">&quot;90&quot;</span>;</span><br><span class="line"><span class="type">int</span> l=Integer.valueOf(sr);</span><br></pre></td></tr></table></figure><table><thead><tr><th>方法</th><th>返回值</th><th>功能</th></tr></thead><tbody><tr><td>byteValue()</td><td>byte</td><td>以 byte 类型返回该 Integer 的值</td></tr><tr><td>shortValue()</td><td>short</td><td>以 short 类型返回该 Integer 的值</td></tr><tr><td>intValue()</td><td>int</td><td>以 int 类型返回该 Integer 的值</td></tr><tr><td>toString()</td><td>String</td><td>返回一个表示该 Integer 值的 String 对象</td></tr><tr><td>equals(Object obj)</td><td>boolean</td><td>比较此对象与指定对象是否相等</td></tr><tr><td>compareTo(Integer anotherlnteger)</td><td>int</td><td>在数字上比较两个 Integer 对象，如相等，则返回 0； 如调用对象的数值小于 anotherlnteger 的数值，则返回负值； 如调用对象的数值大于 anotherlnteger 的数值，则返回正值</td></tr><tr><td>valueOf(String s)</td><td>Integer</td><td>返回保存指定的 String 值的 Integer 对象</td></tr><tr><td>parseInt(String s)</td><td>int</td><td>将数字字符串转换为 int 数值</td></tr></tbody></table><p>在实际的编程过程中，经常将字符串转换为 int 类型的数值，或者将 int 类型的数值转换为对应的字符串。以下代码演示如何实现这两种功能：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">纯文本复制</span><br><span class="line">String str = &quot;456&quot;;int num = Integer.parseInt(str);    // 将字符串转换为int类型的数值int i = 789;String s = Integer.toString(i);    // 将int类型的数值转换为字符串</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> pdshu=Integer.parseInt(diyige);</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">int k=90;</span><br><span class="line">String str=String.valueOf(k);</span><br><span class="line">String sr=&quot;90&quot;;</span><br><span class="line">int l=Integer.valueOf(sr);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> java学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SSM框架整合</title>
      <link href="/2023/05/10/SSM%E6%A1%86%E6%9E%B6%E6%95%B4%E5%90%88/"/>
      <url>/2023/05/10/SSM%E6%A1%86%E6%9E%B6%E6%95%B4%E5%90%88/</url>
      
        <content type="html"><![CDATA[<h1 id="SSM框架整合："><a href="#SSM框架整合：" class="headerlink" title="SSM框架整合："></a>SSM框架整合：</h1><h2 id="一、什么是SSM"><a href="#一、什么是SSM" class="headerlink" title="一、什么是SSM"></a>一、什么是SSM</h2><p>SSM框架是spring、spring MVC 、和mybatis框架的整合，是标准的MVC模式。标准的SSM框架有四层，分别是dao层（mapper），service层，controller层和View层。使用spring实现业务对象管理，使用spring MVC负责请求的转发和视图管理，mybatis作为数据对象的持久化引擎。</p><h3 id="1、SSM"><a href="#1、SSM" class="headerlink" title="1、SSM"></a>1、SSM</h3><h4 id="1）持久层：dao层（mapper）层"><a href="#1）持久层：dao层（mapper）层" class="headerlink" title="1）持久层：dao层（mapper）层"></a>1）持久层：dao层（mapper）层</h4><p>作用：主要是做数据持久层的工作，负责与数据库进行联络的一些任务都封装在此。</p><p>Dao层首先设计的是接口，然后再Spring的配置文件中定义接口的实现类。<br>然后可以在模块中进行接口的调用来进行数据业务的处理。（不在关心接口的实现类是哪个类）<br>数据源的配置以及有关数据库连接的参数都在Spring的配置文件中进行配置。</p><h4 id="2）业务层：Service层"><a href="#2）业务层：Service层" class="headerlink" title="2）业务层：Service层"></a>2）业务层：Service层</h4><p>作用：Service层主要负责业务模块的逻辑应用设计。</p><p>先设计接口然后再设计实类，然后再在Spring的配置文件中配置其实现的关联。（业务逻辑层的实现具体要调用到自己已经定义好的Dao的接口上）这样就可以在应用中调用Service接口来进行业务处理。<br>建立好Dao之后再建立service层，service层又要在controller层之下，因为既要调用Dao层的接口又要提供接口给controller层。每个模型都有一个service接口，每个接口分别封装各自的业务处理的方法。</p><h4 id="3）表现层：Controller层（Handler层）"><a href="#3）表现层：Controller层（Handler层）" class="headerlink" title="3）表现层：Controller层（Handler层）"></a>3）表现层：Controller层（Handler层）</h4><p>作用：负责具体的业务模块流程的控制。</p><p>配置也同样是在Spring的配置文件里面进行，<br>调用Service层提供的接口来控制业务流程。<br>业务流程的不同会有不同的控制器，在具体的开发中可以将我们的流程进行抽象的归纳，设计出可以重复利用的子单元流程模块。</p><h4 id="4）View层"><a href="#4）View层" class="headerlink" title="4）View层"></a>4）View层</h4><p>作用：主要和控制层紧密结合，主要负责前台jsp页面的表示。</p><h3 id="2、Spring"><a href="#2、Spring" class="headerlink" title="2、Spring"></a>2、Spring</h3><p>Spring里面的IOC容器和AOP是我们平时使用最多的。</p><h4 id="1）IOC（控制反转）"><a href="#1）IOC（控制反转）" class="headerlink" title="1）IOC（控制反转）"></a>1）IOC（控制反转）</h4><p>它可以装载bean，也是一种降低对象之间耦合关系的设计思想。（比如租房子。以前租房子需要一个房子一个房子找，费时费力，然后现在加入一个房屋中介，把你需要的房型告诉中介，就可以直接选到需要的房子，中介就相当于spring容器。）</p><h4 id="2）AOP（面向切面）"><a href="#2）AOP（面向切面）" class="headerlink" title="2）AOP（面向切面）"></a>2）AOP（面向切面）</h4><p>是面向对象开发的一种补充，它允许开发人员在不改变原来模型的基础上动态的修改模型以满足新的需求，如：动态的增加日志、安全或异常处理等。AOP使业务逻辑各部分间的耦合度降低，提高程序可重用性，提高开发效率。</p><h3 id="3、SpringMVC"><a href="#3、SpringMVC" class="headerlink" title="3、SpringMVC"></a>3、SpringMVC</h3><h4 id="1、前端控制器（DispatcherServlet-："><a href="#1、前端控制器（DispatcherServlet-：" class="headerlink" title="1、前端控制器（DispatcherServlet)："></a>1、前端控制器（DispatcherServlet)：</h4><p>web.xml地址</p><ol><li>举例：火车调度员</li><li>功能：请求接受及中转</li><li>类比：servlet&#x3D;&#x3D;&gt;创建一个Servlet 实现Switch..case</li></ol><h4 id="2、处理器映射器-HandlerMapping"><a href="#2、处理器映射器-HandlerMapping" class="headerlink" title="2、处理器映射器(HandlerMapping)"></a>2、处理器映射器(HandlerMapping)</h4><p>​@RequestMapping(“&#x2F;registe”)&#x2F;&#x2F;映射器的注解</p><ol><li>举例：字典</li><li>功能：配置处理数据的controller的路径</li><li>类比：servlet上的注解：@WebServlet(“&#x2F;xxxx”)</li></ol><h4 id="3、处理器适配器-HandlerAdapter"><a href="#3、处理器适配器-HandlerAdapter" class="headerlink" title="3、处理器适配器(HandlerAdapter)"></a>3、处理器适配器(HandlerAdapter)</h4><ol><li>举例：大秘书</li><li>功能<ol><li>接受数据</li><li>实现数据适配</li></ol></li></ol><h4 id="4、处理器-Controller"><a href="#4、处理器-Controller" class="headerlink" title="4、处理器(Controller)"></a>4、处理器(Controller)</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">@Controller //变老板 </span><br><span class="line">作用：1、标致哪个是处理器 2、处理器适配器</span><br></pre></td></tr></table></figure><ol><li><p>举例：老板</p></li><li><p>功能：处理数据</p></li><li><p>类比：servlet本身</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--  开启注解配置  --&gt;</span><br><span class="line">&lt;mvc:annotation-driven/&gt;</span><br><span class="line">&lt;!--注解范围配置--&gt;</span><br><span class="line">&lt;context:component-scan base-package=&quot;com.iflytek.cn.controller&quot;/&gt;</span><br></pre></td></tr></table></figure></li></ol><h4 id="5、视图解析器（View-Resolver）"><a href="#5、视图解析器（View-Resolver）" class="headerlink" title="5、视图解析器（View Resolver）"></a>5、视图解析器（View Resolver）</h4><ol><li>jsp、Html+Ajax</li><li>功能：<ol><li>获取结果数据</li><li>解析页面</li><li>渲染数据</li></ol></li></ol><p><img src="https://pic2.imgdb.cn/item/645cd6470d2dde57771bb84e.jpg" alt="img"></p><p><strong>&lt;复杂版&gt;</strong></p><ol><li>用户发送请求至前端控制器DispatcherServlet。</li><li>DispatcherServlet收到请求调用HandlerMapping处理器映射器。</li><li>处理器映射器找到具体的处理器(可以根据xml配置、注解进行查找)，生成处理器对象及处理器拦截器(如果有则生成)一并返回给DispatcherServlet。</li><li>DispatcherServlet调用HandlerAdapter处理器适配器。</li><li>HandlerAdapter经过适配调用具体的处理器(Controller，也叫后端控制器)。</li><li>Controller执行完成返回ModelAndView。</li><li>HandlerAdapter将controller执行结果ModelAndView返回给DispatcherServlet。</li><li>DispatcherServlet将ModelAndView传给ViewReslover视图解析器。</li><li>ViewReslover解析后返回具体View。</li><li>DispatcherServlet根据View进行渲染视图（即将模型数据填充至视图中）。</li><li>DispatcherServlet响应用户。</li></ol><p><strong>&lt;简单版&gt;</strong></p><ol><li>客户端发送请求到DispacherServlet（分发器）</li><li>由DispacherServlet控制器查询HanderMapping，找到处理请求的Controller</li><li>Controller调用业务逻辑处理后，返回ModelAndView</li><li>DispacherSerclet查询视图解析器，找到ModelAndView指定的视图</li><li>视图负责将结果显示到客户端</li></ol><h3 id="4、Mybatis-（核心是SqlSession）"><a href="#4、Mybatis-（核心是SqlSession）" class="headerlink" title="4、Mybatis （核心是SqlSession）"></a>4、Mybatis （核心是SqlSession）</h3><p>mybatis是对jdbc的封装，它让数据库底层操作变的透明。mybatis的操作都是围绕一个sqlSessionFactory实例展开的。mybatis通过配置文件关联到各实体类的Mapper文件，Mapper文件中配置了每个类对数据库所需进行的sql语句映射。在每次与数据库交互时，通过sqlSessionFactory拿到一个sqlSession，再执行sql命令。</p><h2 id="二、进行SSM框架配置"><a href="#二、进行SSM框架配置" class="headerlink" title="二、进行SSM框架配置"></a>二、进行SSM框架配置</h2><h3 id="1、基础架构"><a href="#1、基础架构" class="headerlink" title="1、基础架构"></a>1、基础架构</h3><ol><li><p>java源码目录  </p><ol><li>controller</li><li>dao</li><li>pojo</li><li>service</li></ol></li><li><p>resources配置目录 </p><ol><li>mappers文件目录</li><li>jdbc.properties</li><li>spring.xml</li><li>springmvc.xml</li></ol></li><li><p>webapp网站配置目录</p><ol><li><p>WEB_INF</p><ol><li>web.xml</li></ol></li><li><p>index.jsp</p></li></ol></li></ol><h3 id="2、配置文件"><a href="#2、配置文件" class="headerlink" title="2、配置文件"></a>2、配置文件</h3><h4 id="pom-xml-文件配置"><a href="#pom-xml-文件配置" class="headerlink" title="pom.xml 文件配置"></a>pom.xml 文件配置</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--    junit 测试--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.8.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--SpringMVC 5个核心包--&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework/spring-context --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-context<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.3.18<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework/spring-core --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.3.18<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework/spring-web --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.3.18<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework/spring-webmvc --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-webmvc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.3.18<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework/spring-expression --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-expression<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.3.18<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!--  spring部分插件  2023年5月9日15:07:40--&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework/spring-beans --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-beans<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.3.18<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework/spring-orm --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-orm<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.3.18<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework/spring-aop --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-aop<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.3.18<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!--mybatis和spring的整合包--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.0.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!--    Mybatis驱动包--&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.mybatis/mybatis --&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--    mybatis --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.5.7<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--    mysql 驱动--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!--    jackson 3个：SpringMVC框架 Ajax交互 JSON将来不经过视图解析器--&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.core<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-databind<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.9.8<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-core --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.core<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.9.8<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-annotations --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.core<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-annotations<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.9.8<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!--加入servlet依赖（servlet的jar）--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javax.servlet-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.0.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--jsp的依赖（jsp相关的jar加进来）--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet.jsp<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javax.servlet.jsp-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!--    Tomcat8.0.50--&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.apache.tomcat/tomcat-servlet-api --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.tomcat<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>tomcat-servlet-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>8.0.50<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!--开发阶段    logback and slf输出日志文件 --&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 添加slf4j日志api --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.slf4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>slf4j-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.7.20<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 添加logback-classic依赖 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>ch.qos.logback<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>logback-classic<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 添加logback-core依赖 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>ch.qos.logback<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>logback-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--Mybatis 分页插件--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.pagehelper<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>pagehelper<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.2.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- 连接池 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0.9<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="web-xml-文件配置"><a href="#web-xml-文件配置" class="headerlink" title="web.xml 文件配置"></a>web.xml 文件配置</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">web-app</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">display-name</span>&gt;</span>Archetype Created Web Application<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">context-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:spring.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">context-param</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!--配置Spring的编码过滤器--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>CharacterEncodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>org.springframework.web.filter.CharacterEncodingFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>encoding<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>forceEncoding<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>true<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>CharacterEncodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- spring 监听 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">listener</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">listener-class</span>&gt;</span>org.springframework.web.context.ContextLoaderListener<span class="tag">&lt;/<span class="name">listener-class</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">listener</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- spring mvc  --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>springmvc<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>org.springframework.web.servlet.DispatcherServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:springmvc.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>springmvc<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="jdbc-properties-文件配置"><a href="#jdbc-properties-文件配置" class="headerlink" title="jdbc.properties 文件配置"></a>jdbc.properties 文件配置</h4><p>该文件设置数据库连接对象</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">jdbc.driver</span>=<span class="string">com.mysql.jdbc.Driver</span></span><br><span class="line"><span class="attr">jdbc.url</span>=<span class="string">jdbc:mysql://localhost:3306/bb</span></span><br><span class="line"><span class="attr">jdbc.username</span>=<span class="string">root</span></span><br><span class="line"><span class="attr">jdbc.password</span>=<span class="string">root</span></span><br></pre></td></tr></table></figure><h4 id="spring-xml-文件配置"><a href="#spring-xml-文件配置" class="headerlink" title="spring.xml 文件配置"></a>spring.xml 文件配置</h4><p>该文件中 spring接管了数据库、配置了事物驱动、接管了Mybatis（分页插件）、设置了类的别名、mapper接管</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:tx</span>=<span class="string">&quot;http://www.springframework.org/schema/tx&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="string"><span class="tag">       http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">       http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="string"><span class="tag">       https://www.springframework.org/schema/context/spring-context.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">       http://www.springframework.org/schema/tx</span></span></span><br><span class="line"><span class="string"><span class="tag">       http://www.springframework.org/schema/tx/spring-tx.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--扫描组件（除控制层）--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;mon&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">context:exclude-filter</span> <span class="attr">type</span>=<span class="string">&quot;annotation&quot;</span> <span class="attr">expression</span>=<span class="string">&quot;org.springframework.stereotype.Controller&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">context:component-scan</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--引入jdbc.properties--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:property-placeholder</span> <span class="attr">location</span>=<span class="string">&quot;classpath:jdbc.properties&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--配置数据源--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.alibaba.druid.pool.DruidDataSource&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driverClassName&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.driver&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.url&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.username&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.password&#125;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--配置事务管理器--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;transactionManager&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.jdbc.datasource.DataSourceTransactionManager&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;dataSource&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">        开启事务的注解驱动</span></span><br><span class="line"><span class="comment">        将使用注解@Transactional标识的方法或类中所有的方法进行事务管理</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tx:annotation-driven</span> <span class="attr">transaction-manager</span>=<span class="string">&quot;transactionManager&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--配置SqlSessionFactoryBean，可以直接在Spring的IOC中获取SqlSessionFactory--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.mybatis.spring.SqlSessionFactoryBean&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--设置MyBatis的核心配置文件的路径--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;configLocation&quot;</span> <span class="attr">value</span>=<span class="string">&quot;classpath:mybatis-config.xml&quot;</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--设置数据源--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;dataSource&quot;</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--设置类型别名所对应的包--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;typeAliasesPackage&quot;</span> <span class="attr">value</span>=<span class="string">&quot;mon.pojo&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;mapperLocations&quot;</span> <span class="attr">value</span>=<span class="string">&quot;classpath:mappers/*.xml&quot;</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--分页--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;plugins&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">array</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;com.github.pagehelper.PageInterceptor&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;properties&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">props</span>&gt;</span></span><br><span class="line">                            <span class="comment">&lt;!--页号在合理值 0 - max--&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">&quot;reasonable&quot;</span>&gt;</span>true<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">props</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">array</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">        配置mapper接口的扫描，可以将指定包下所有的mapper接口</span></span><br><span class="line"><span class="comment">        通过SqlSession创建代理实现类对象，并将这些对象交给IOC容器管理</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.mybatis.spring.mapper.MapperScannerConfigurer&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;basePackage&quot;</span> <span class="attr">value</span>=<span class="string">&quot;mon.dao&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="springmvc-xml-文件配置"><a href="#springmvc-xml-文件配置" class="headerlink" title="springmvc.xml 文件配置"></a>springmvc.xml 文件配置</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span> </span></span><br><span class="line"><span class="tag"><span class="attr">xmlns:mvc</span>=<span class="string">&quot;http://www.springframework.org/schema/mvc&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">xmlns:aop</span>=<span class="string">&quot;http://www.springframework.org/schema/aop&quot;</span> </span></span><br><span class="line"><span class="tag"><span class="attr">xmlns:tx</span>=<span class="string">&quot;http://www.springframework.org/schema/tx&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans </span></span></span><br><span class="line"><span class="string"><span class="tag">http://www.springframework.org/schema/beans/spring-beans.xsd </span></span></span><br><span class="line"><span class="string"><span class="tag">http://www.springframework.org/schema/mvc </span></span></span><br><span class="line"><span class="string"><span class="tag">http://www.springframework.org/schema/mvc/spring-mvc.xsd </span></span></span><br><span class="line"><span class="string"><span class="tag">http://www.springframework.org/schema/context </span></span></span><br><span class="line"><span class="string"><span class="tag">http://www.springframework.org/schema/context/spring-context.xsd </span></span></span><br><span class="line"><span class="string"><span class="tag">http://www.springframework.org/schema/aop </span></span></span><br><span class="line"><span class="string"><span class="tag">http://www.springframework.org/schema/aop/spring-aop.xsd </span></span></span><br><span class="line"><span class="string"><span class="tag">http://www.springframework.org/schema/tx </span></span></span><br><span class="line"><span class="string"><span class="tag">http://www.springframework.org/schema/tx/spring-tx.xsd&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--  开启注解配置  --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mvc:annotation-driven</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!--加载静态资源--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mvc:default-servlet-handler</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--注解范围配置--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;mon&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 4.配置视图解析器 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.web.servlet.view.InternalResourceViewResolver&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--逻辑视图前缀--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;prefix&quot;</span> <span class="attr">value</span>=<span class="string">&quot;/jsp/&quot;</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!--逻辑视图后缀，匹配模式：前缀+逻辑视图+后缀，形成完整路径名--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;suffix&quot;</span> <span class="attr">value</span>=<span class="string">&quot;.jsp&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="mybatis-config-xml-文件配置"><a href="#mybatis-config-xml-文件配置" class="headerlink" title="mybatis-config.xml 文件配置"></a>mybatis-config.xml 文件配置</h4><p>名存实亡.jpg</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">configuration</span></span></span><br><span class="line"><span class="meta">        <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span> <span class="attr">resource</span>=<span class="string">&quot;jdbc.properties&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--    &lt;typeAliases&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        &lt;package name=&quot;mon.pojo&quot;/&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    &lt;/typeAliases&gt;--&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--    &lt;environments default=&quot;development&quot;&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        &lt;environment id=&quot;development&quot;&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--            &lt;transactionManager type=&quot;JDBC&quot;/&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--            &lt;dataSource type=&quot;POOLED&quot;&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--                &lt;property name=&quot;driver&quot; value=&quot;$&#123;jdbc.driver&#125;&quot;/&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--                &lt;property name=&quot;url&quot; value=&quot;$&#123;jdbc.url&#125;&quot;/&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--                &lt;property name=&quot;username&quot; value=&quot;$&#123;jdbc.username&#125;&quot;/&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--                &lt;property name=&quot;password&quot; value=&quot;$&#123;jdbc.password&#125;&quot;/&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--            &lt;/dataSource&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        &lt;/environment&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    &lt;/environments&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--&amp;lt;!&amp;ndash;        引入Mybatis的映射文件&amp;ndash;&amp;gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    &lt;mappers&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--&amp;lt;!&amp;ndash;        &lt;mapper resource=&quot;org/mybatis/example/BlogMapper.xml&quot;/&gt;&amp;ndash;&amp;gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        &lt;mapper resource=&quot;mappers/AnchorMapper.xml&quot;/&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        &lt;mapper resource=&quot;mappers/CategoryMapper.xml&quot;/&gt;--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--    &lt;/mappers&gt;--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="3、架构文件"><a href="#3、架构文件" class="headerlink" title="3、架构文件"></a>3、架构文件</h3><h4 id="1、controller"><a href="#1、controller" class="headerlink" title="1、controller"></a>1、controller</h4><p>在类之前需要打的注解</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/anchor&quot;)</span></span><br><span class="line"><span class="meta">@CrossOrigin(origins = &quot;*&quot;, maxAge = 3600)</span> <span class="comment">//解决跨域问题</span></span><br></pre></td></tr></table></figure><p>实现自动注入业务层</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> AnchorServiceImpl anchorService;</span><br></pre></td></tr></table></figure><p>controller中的方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/all&quot;)</span></span><br><span class="line"><span class="meta">@ResponseBody</span> <span class="comment">//将java对象转换为json数据格式</span></span><br><span class="line"><span class="keyword">public</span> ServerResponse <span class="title function_">selectAll</span><span class="params">(AnchorVO anchorVO)</span> &#123;</span><br><span class="line"><span class="comment">//直接调用service中的方法</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2、service"><a href="#2、service" class="headerlink" title="2、service"></a>2、service</h4><p>service分为接口与serviceImpl实现类</p><p>在接口中 只需要定义dao中的方法 然后在实现类中重写继承的方法</p><h5 id="service"><a href="#service" class="headerlink" title="service"></a>service</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">AnchorService</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> List&lt;Anchor&gt; <span class="title function_">selectAll</span><span class="params">()</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">addAnchor</span><span class="params">(Anchor anchor)</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">deleteByIdAfter</span><span class="params">(<span class="type">int</span> id)</span>;</span><br><span class="line">    <span class="keyword">public</span> List&lt;Anchor&gt; <span class="title function_">detailId</span><span class="params">(<span class="type">int</span> id)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="serviceImpl"><a href="#serviceImpl" class="headerlink" title="serviceImpl"></a>serviceImpl</h5><p>需要声明@Service</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AnchorServiceImpl</span> <span class="keyword">implements</span> <span class="title class_">AnchorService</span> &#123;</span><br><span class="line">    <span class="meta">@Autowired</span> <span class="comment">//自动装配 从IOC容器中找到被标注的类型及其子对象 注入到此变量中</span></span><br><span class="line">    <span class="keyword">private</span> AnchorDao anchorDao;</span><br><span class="line">    <span class="keyword">public</span> List&lt;Anchor&gt; <span class="title function_">selectAll</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> anchorDao.selectAll();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">addAnchor</span><span class="params">(Anchor anchor)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> anchorDao.addAnchor(anchor);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">deleteByIdAfter</span><span class="params">(<span class="type">int</span> id)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> anchorDao.deleteByIdAfter(id);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> List&lt;Anchor&gt; <span class="title function_">detailId</span><span class="params">(<span class="type">int</span> id)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> anchorDao.detailId(id);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3、dao"><a href="#3、dao" class="headerlink" title="3、dao"></a>3、dao</h4><p>dao层实现与mapper文件的对应</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">AnchorDao</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> List&lt;Anchor&gt; <span class="title function_">selectAll</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">addAnchor</span><span class="params">(Anchor anchor)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">deleteByIdAfter</span><span class="params">(<span class="type">int</span> id)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> List&lt;Anchor&gt; <span class="title function_">detailId</span><span class="params">(<span class="type">int</span> id)</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="4、pojo"><a href="#4、pojo" class="headerlink" title="4、pojo"></a>4、pojo</h4><p>pojo层主要为实体类 不再过多说明</p><h2 id="三、常用的工具类"><a href="#三、常用的工具类" class="headerlink" title="三、常用的工具类"></a>三、常用的工具类</h2><p><a href="https://cloud.anzhiy.cn/s/D433fX">ServerResponse</a>：后端发送Layui的标准格式化工具类</p><p><a href="https://cloud.anzhiy.cn/s/vbaaC9">JsonUtil</a> ：常用的后端接受json数据工具类</p>]]></content>
      
      
      <categories>
          
          <category> java学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>二分模板</title>
      <link href="/2023/05/10/%E4%BA%8C%E5%88%86%E6%A8%A1%E6%9D%BF/"/>
      <url>/2023/05/10/%E4%BA%8C%E5%88%86%E6%A8%A1%E6%9D%BF/</url>
      
        <content type="html"><![CDATA[<h1 id="二分模板"><a href="#二分模板" class="headerlink" title="二分模板"></a>二分模板</h1><p>可以实现查找某个数字第一次出现的位置下标。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">import java.io.BufferedInputStream;</span><br><span class="line">import java.io.BufferedReader;</span><br><span class="line">import java.io.InputStreamReader;</span><br><span class="line">import java.io.StreamTokenizer;</span><br><span class="line">import java.util.Scanner;</span><br><span class="line"> </span><br><span class="line">public class Main &#123;</span><br><span class="line">static int num[];</span><br><span class="line">public static void main(String[] args) throws Exception&#123;</span><br><span class="line">Read sc=new Read();</span><br><span class="line">int n=sc.nextInt();</span><br><span class="line">int m=sc.nextInt();</span><br><span class="line">num=new int[n];</span><br><span class="line">for(int i=0;i&lt;n;i++) &#123;</span><br><span class="line">num[i]=sc.nextInt();</span><br><span class="line">&#125;</span><br><span class="line">while(m--&gt;0) &#123;</span><br><span class="line">int target=sc.nextInt();</span><br><span class="line">int left=0;</span><br><span class="line">int right=n-1;</span><br><span class="line">while(left&lt;right) &#123;//二分模板</span><br><span class="line">int mid=(left+right)/2;</span><br><span class="line"> if(num[mid]&lt;target) &#123;</span><br><span class="line">left=mid+1;</span><br><span class="line">&#125;</span><br><span class="line">else if(num[mid]&gt;=target) &#123;</span><br><span class="line">right=mid;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">if(num[left]==target)</span><br><span class="line">System.out.print((left+1)+&quot; &quot;);</span><br><span class="line">else &#123;</span><br><span class="line">System.out.print(&quot;-1 &quot;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">//快读</span><br><span class="line">class Read&#123;</span><br><span class="line">StreamTokenizer st=new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));</span><br><span class="line">public int nextInt() throws Exception&#123;</span><br><span class="line">st.nextToken();</span><br><span class="line">return (int)st.nval;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> java学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>开发图书管理系统的一些总结</title>
      <link href="/2023/05/10/%E5%9B%BE%E4%B9%A6%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/"/>
      <url>/2023/05/10/%E5%9B%BE%E4%B9%A6%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/</url>
      
        <content type="html"><![CDATA[<h1 id="图书管理系统"><a href="#图书管理系统" class="headerlink" title="图书管理系统"></a>图书管理系统</h1><h2 id="1、更新日志"><a href="#1、更新日志" class="headerlink" title="1、更新日志"></a>1、更新日志</h2><h4 id="2023-5-24"><a href="#2023-5-24" class="headerlink" title="2023-5-24"></a>2023-5-24</h4><p>完成了图书信息 读者信息 分类信息的 查询 添加 修改 删除</p><h4 id="2023-5-30"><a href="#2023-5-30" class="headerlink" title="2023-5-30"></a>2023-5-30</h4><p>完成了图书借阅模块</p><h4 id="2023-6-1"><a href="#2023-6-1" class="headerlink" title="2023-6-1"></a>2023-6-1</h4><h2 id="2、遇到的问题"><a href="#2、遇到的问题" class="headerlink" title="2、遇到的问题"></a>2、遇到的问题</h2><h3 id="1、图书名和分类名都为name时，该如何进行连接查询，正确识别name值"><a href="#1、图书名和分类名都为name时，该如何进行连接查询，正确识别name值" class="headerlink" title="1、图书名和分类名都为name时，该如何进行连接查询，正确识别name值"></a>1、图书名和分类名都为name时，该如何进行连接查询，正确识别name值</h3><p>答：使用连接查询时，给表起别名 </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT bk.*,ty.name tname FROM book_info bk left JOIN type_info ty  ON bk.type_id =ty.id  ;</span><br></pre></td></tr></table></figure><p>后端发送给前端数据样式为如下:</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="string">&quot;code&quot;</span>:<span class="number">200</span>,<span class="string">&quot;data&quot;</span>:[&#123;<span class="string">&quot;id&quot;</span>:<span class="number">2</span>,<span class="string">&quot;isbn&quot;</span>:<span class="string">&quot;100012&quot;</span>,<span class="string">&quot;name&quot;</span>:<span class="string">&quot;三国演义&quot;</span>,<span class="string">&quot;bookTypeInfo&quot;</span>:&#123;<span class="string">&quot;id&quot;</span>:<span class="literal">null</span>,<span class="string">&quot;name&quot;</span>:<span class="string">&quot;文学类&quot;</span>,<span class="string">&quot;remarks&quot;</span>:<span class="literal">null</span>&#125;,<span class="string">&quot;author&quot;</span>:<span class="string">&quot;罗贯中&quot;</span>,<span class="string">&quot;price&quot;</span>:<span class="string">&quot;48&quot;</span>,<span class="string">&quot;language&quot;</span>:<span class="string">&quot;中文&quot;</span>&#125;,&#123;<span class="string">&quot;id&quot;</span>:<span class="number">4</span>,<span class="string">&quot;isbn&quot;</span>:<span class="string">&quot;100014&quot;</span>,<span class="string">&quot;name&quot;</span>:<span class="string">&quot;资本论&quot;</span>,<span class="string">&quot;bookTypeInfo&quot;</span>:&#123;<span class="string">&quot;id&quot;</span>:<span class="literal">null</span>,<span class="string">&quot;name&quot;</span>:<span class="string">&quot;经济学类&quot;</span>,<span class="string">&quot;remarks&quot;</span>:<span class="literal">null</span>&#125;,<span class="string">&quot;author&quot;</span>:<span class="string">&quot;马克思&quot;</span>,<span class="string">&quot;price&quot;</span>:<span class="string">&quot;42&quot;</span>,<span class="string">&quot;language&quot;</span>:<span class="string">&quot;英文&quot;</span>&#125;,&#123;<span class="string">&quot;id&quot;</span>:<span class="number">5</span>,<span class="string">&quot;isbn&quot;</span>:<span class="string">&quot;100015&quot;</span>,<span class="string">&quot;name&quot;</span>:<span class="string">&quot;经济学原理&quot;</span>,<span class="string">&quot;bookTypeInfo&quot;</span>:&#123;<span class="string">&quot;id&quot;</span>:<span class="literal">null</span>,<span class="string">&quot;name&quot;</span>:<span class="string">&quot;经济学类&quot;</span>,<span class="string">&quot;remarks&quot;</span>:<span class="literal">null</span>&#125;,<span class="string">&quot;author&quot;</span>:<span class="string">&quot;马歇尔&quot;</span>,<span class="string">&quot;price&quot;</span>:<span class="string">&quot;45&quot;</span>,<span class="string">&quot;language&quot;</span>:<span class="string">&quot;英文&quot;</span>&#125;,&#123;<span class="string">&quot;id&quot;</span>:<span class="number">6</span>,<span class="string">&quot;isbn&quot;</span>:<span class="string">&quot;100016&quot;</span>,<span class="string">&quot;name&quot;</span>:<span class="string">&quot;大变局下的中国法治&quot;</span>,<span class="string">&quot;bookTypeInfo&quot;</span>:&#123;<span class="string">&quot;id&quot;</span>:<span class="literal">null</span>,<span class="string">&quot;name&quot;</span>:<span class="string">&quot;法学类&quot;</span>,<span class="string">&quot;remarks&quot;</span>:<span class="literal">null</span>&#125;,<span class="string">&quot;author&quot;</span>:<span class="string">&quot;李卫东&quot;</span>,<span class="string">&quot;price&quot;</span>:<span class="string">&quot;42&quot;</span>,<span class="string">&quot;language&quot;</span>:<span class="string">&quot;中文&quot;</span>&#125;],<span class="string">&quot;msg&quot;</span>:<span class="string">&quot;查询全部图书信息&quot;</span>,<span class="string">&quot;count&quot;</span>:<span class="number">4</span>&#125;</span><br></pre></td></tr></table></figure><p>在普通的显示中，直接调用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;field: &#x27;isbn&#x27;, width: 100, title: &#x27;图书编号&#x27;&#125;,</span><br></pre></td></tr></table></figure><p>在前端返回数据时，采用 templet: function(){} 返回正确的数据结果</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;field:&#x27;bookTypeInfo&#x27;,width:100,title:&#x27;图书类型&#x27;,templet:function (d)&#123;</span><br><span class="line">        return d.bookTypeInfo.name&#125;&#125;,</span><br></pre></td></tr></table></figure><h3 id="2、分类的数据已经拿到过一次了-在子页面中能不能直接用？"><a href="#2、分类的数据已经拿到过一次了-在子页面中能不能直接用？" class="headerlink" title="2、分类的数据已经拿到过一次了 在子页面中能不能直接用？"></a>2、分类的数据已经拿到过一次了 在子页面中能不能直接用？</h3><p>答：可以 使用 localStorage进行数据传输(session 也可以)</p><h4 id="HTML-API"><a href="#HTML-API" class="headerlink" title="HTML API"></a>HTML API</h4><p>localstorage 在浏览器的 API 有两个：localStorage 和sessionStorage，存在于 window 对象中：localStorage 对应 window.localStorage，sessionStorage 对应 window.sessionStorage。</p><p>localStorage 和 sessionStorage 的区别主要是在于其生存期。</p><p><strong>localStorage API</strong></p><p>要在 web 应用中使用 localStorage，首先要熟悉它提供的属性和方法：</p><p>length：返回 localStorage 中的键值对的数目setItem()：增加一个键值对到 localStorage 中getItem()：从 localStorage 中查询指定 key 的值removeItem()：从 localStorage 中删除指定的键值对clear()：清空 localStorage 中所有键值对key()： 传入一个数字 n，用于返回指定第 n 个键的名字</p><p>在index页面设置list数组</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">localStorage.setItem(<span class="string">&quot;categoryData&quot;</span>,JSON.stringify(list))</span><br></pre></td></tr></table></figure><p>在add页面接收list数组</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">let</span> <span class="variable">localCategory</span> <span class="operator">=</span> JSON.parse(localStorage.getItem(<span class="string">&quot;categoryData&quot;</span>))</span><br><span class="line">console.log(<span class="string">&quot;=======&quot;</span>)</span><br><span class="line">console.log(localCategory)</span><br><span class="line">console.log(<span class="string">&quot;========&quot;</span>)</span><br></pre></td></tr></table></figure><h3 id="3、为什么访问路径-有时需要加绝对路径-有时不需要？"><a href="#3、为什么访问路径-有时需要加绝对路径-有时不需要？" class="headerlink" title="3、为什么访问路径 有时需要加绝对路径 有时不需要？"></a>3、为什么访问路径 有时需要加绝对路径 有时不需要？</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">//动态获取图书类型的数据，即下拉菜单，跳出图书类型</span><br><span class="line">        $.get(&quot;findAllList&quot;,&#123;&#125;,function (data) &#123;</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">//动态获取图书类型的数据</span><br><span class="line">        $.get(&quot;$&#123;pageContext.request.contextPath&#125;/findAllList&quot;,&#123;&#125;,function (data) &#123;</span><br></pre></td></tr></table></figure><h3 id="4、向数据库插入数据-提示报错："><a href="#4、向数据库插入数据-提示报错：" class="headerlink" title="4、向数据库插入数据 提示报错："></a>4、向数据库插入数据 提示报错：</h3><p>1292 - Incorrect date value : 2018’ for column ‘ publish date’ at row 1</p><p><img src="https://bu.dusays.com/2023/05/17/64648bd43e820.png" alt="1684310991677.png"></p><p>MySQL的sql_mode设置导致报错1292</p><p>答：配置数据库  在MySQL8.0.12根目录下 my.ini配置文件 <a href="https://cloud.tencent.com/developer/article/2136497">参考地址</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[mysqld]</span><br><span class="line">sql_mode=&#x27;ONLY_FULL_GROUP_BY,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION&#x27;</span><br></pre></td></tr></table></figure><h3 id="5、使用layui时-选择框数据拿不到-日期类型数据拿不到"><a href="#5、使用layui时-选择框数据拿不到-日期类型数据拿不到" class="headerlink" title="5、使用layui时 选择框数据拿不到  日期类型数据拿不到"></a>5、使用layui时 选择框数据拿不到  日期类型数据拿不到</h3><p>分类id为空 date数据为空 </p><p>答：数据列表当中 数据名称与实体类不对应</p><p>将name改为对应的即可</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="type">int</span> type_id; <span class="comment">//分类id</span></span><br><span class="line"><span class="keyword">private</span> Date publish_date; <span class="comment">//出版日期</span></span><br></pre></td></tr></table></figure><p>有时拿不到数据 试用 @DateTimeFormat(pattern &#x3D; “yyyy-MM-dd”) 加到date上</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=<span class="string">&quot;layui-form-item&quot;</span>&gt;</span><br><span class="line">    &lt;label class=<span class="string">&quot;layui-form-label required&quot;</span>&gt;图书类别&lt;/label&gt;</span><br><span class="line">    &lt;div class=<span class="string">&quot;layui-input-block&quot;</span>&gt;</span><br><span class="line">        &lt;select name=<span class="string">&quot;type_id&quot;</span> id=<span class="string">&quot;typeId&quot;</span> lay-verify=<span class="string">&quot;required&quot;</span>&gt;</span><br><span class="line">            &lt;option value=<span class="string">&quot;&quot;</span>&gt;请选择&lt;/option&gt;</span><br><span class="line">        &lt;/select&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;div class=<span class="string">&quot;layui-form-item&quot;</span>&gt;</span><br><span class="line">    &lt;label class=<span class="string">&quot;layui-form-label&quot;</span>&gt;出版日期&lt;/label&gt;</span><br><span class="line">    &lt;div class=<span class="string">&quot;layui-input-block&quot;</span>&gt;</span><br><span class="line">        &lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;publish_date&quot;</span> id=<span class="string">&quot;date&quot;</span> lay-verify=<span class="string">&quot;date&quot;</span> autocomplete=<span class="string">&quot;off&quot;</span> class=<span class="string">&quot;layui-input&quot;</span>&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><h3 id="6、在弹出层表单中-怎么初始化给表单value赋值为修改的默认值"><a href="#6、在弹出层表单中-怎么初始化给表单value赋值为修改的默认值" class="headerlink" title="6、在弹出层表单中 怎么初始化给表单value赋值为修改的默认值"></a>6、在弹出层表单中 怎么初始化给表单value赋值为修改的默认值</h3><p>答：用model作用域</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GetMapping(&quot;/queryBookInfoById&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">queryBookInfoById</span><span class="params">(<span class="type">int</span> id,Model model)</span>&#123;</span><br><span class="line">    <span class="type">BookInfo</span> <span class="variable">bookInfo</span> <span class="operator">=</span> bookInfoService.SelectOneBookInfo(id);</span><br><span class="line">    System.out.println(<span class="string">&quot; ============== 这是视图解析器===&gt;queryBookInfoById: bookInfo ==============&quot;</span>);</span><br><span class="line">    System.out.println(bookInfo);</span><br><span class="line">    model.addAttribute(<span class="string">&quot;info&quot;</span>,bookInfo);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;/book/updateBook&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>后端将数据存入model作用域中</p><p>前端直接调用</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">value=<span class="string">&quot;$&#123;info.publishDate&#125;&quot;</span></span><br></pre></td></tr></table></figure><h3 id="7、数据库报错：Value-‘0000-00-00’-can-not-be-represented-as-java-sql-Date"><a href="#7、数据库报错：Value-‘0000-00-00’-can-not-be-represented-as-java-sql-Date" class="headerlink" title="7、数据库报错：Value ‘0000-00-00’ can not be represented as java.sql.Date"></a>7、数据库报错：Value ‘0000-00-00’ can not be represented as java.sql.Date</h3><p>答：将0000的日期删除掉 并设置日期的默认值为空值    <a href="https://blog.csdn.net/warrah/article/details/52582786">参考</a></p><h3 id="8、Request、session-和-application的区别"><a href="#8、Request、session-和-application的区别" class="headerlink" title="8、Request、session 和 application的区别"></a>8、Request、session 和 application的区别</h3><ol><li>request( 请求作用域 )对象内数据存活范围是当客户端向服务器发送一个请求，服务器向客户端返回一个响应之后，该请求对象就被销毁了。之后再次发送的请求也无法获取之前request对象存放的任何数据。     <ol><li>request的setAttribute和getAttribute方法一般成对出现。都是在服务器端内部执行的，客户端不知道服务器端是否执行过。     </li><li>request的getParameter()方法的作用是获取到客户端。通过表单或url请求参数发送的参数值，进行客户端和服务器端的交互。     </li><li>一个HTTP请求的处理需要多个Servlet合作，几个servlet之间通过某种方式来传递信息，但这个信息在请求结束后就无效了。 （若多个请求之间传递信息，可用转发来操作 request.getRequestDispatcher(String path).forword(request,response);）</li></ol></li><li>session（会话作用域）对象内数据的存活范围是当前浏览器页面的时间。只要浏览器窗口未关闭，session对象就一直存在。 </li><li>application（全局作用范围）的存货范围是只要服务器没有关闭，application对象中的数据就一直存在。</li></ol><p>————————————————<br>版权声明：本文为CSDN博主「半夜偷瓜吃的猹」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a href="https://blog.csdn.net/m0_54241271/article/details/121527229">https://blog.csdn.net/m0_54241271/article/details/121527229</a></p><h3 id="9、SpringMVC中分别使用ModelAndView，Model，Request域来封装数据，并显示在前端页面"><a href="#9、SpringMVC中分别使用ModelAndView，Model，Request域来封装数据，并显示在前端页面" class="headerlink" title="9、SpringMVC中分别使用ModelAndView，Model，Request域来封装数据，并显示在前端页面"></a>9、SpringMVC中分别使用ModelAndView，Model，Request域来封装数据，并显示在前端页面</h3><p><strong>1：前端jsp</strong></p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">欢迎来到page&lt;br/&gt;</span><br><span class="line">$&#123;ac&#125;&lt;br/&gt;</span><br><span class="line">$&#123;msg&#125;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><p><strong>2:视图解析器</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 配置视图解析器 --&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;viewResolver&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.web.servlet.view.InternalResourceViewResolver&quot;</span>&gt;</span></span><br><span class="line">       <span class="comment">&lt;!-- JSP文件所在的目录 --&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;prefix&quot;</span> <span class="attr">value</span>=<span class="string">&quot;/WEB-INF/pages/&quot;</span>/&gt;</span> <span class="comment">&lt;!-- 文件的后缀名 --&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;suffix&quot;</span> <span class="attr">value</span>=<span class="string">&quot;.jsp&quot;</span>/&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>3：正文</strong></p><p><strong>3.1：request域对象存储数据,当然session，application也能存</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(value = &quot;/run01&quot;,method = RequestMethod.GET)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">run01</span><span class="params">(HttpServletRequest request)</span>&#123;</span><br><span class="line">        request.setAttribute(<span class="string">&quot;ac&quot;</span>,account);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;page&quot;</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><strong>3.2：model存储数据</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(value = &quot;/run02&quot;,method = RequestMethod.GET)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">run02</span><span class="params">(Model model)</span>&#123;</span><br><span class="line">        model.addAttribute(<span class="string">&quot;ac&quot;</span>,account);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;page&quot;</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><strong>3.3：modelAndView存储数据使用setViewName()和addObject()方法封装数据</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(value = &quot;/run03&quot;,method = RequestMethod.GET)</span></span><br><span class="line">    <span class="keyword">public</span> ModelAndView <span class="title function_">run03</span><span class="params">(ModelAndView modelAndView)</span>&#123;</span><br><span class="line">        modelAndView.setViewName(<span class="string">&quot;page&quot;</span>);</span><br><span class="line">        modelAndView.addObject(<span class="string">&quot;ac&quot;</span>,account);</span><br><span class="line">        <span class="keyword">return</span> modelAndView;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><strong>3.4：modelAndView存储数据使用setViewName()和getModel().put()方法封装数据</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(value = &quot;/run05&quot;,method = RequestMethod.GET)</span></span><br><span class="line">   <span class="keyword">public</span> ModelAndView <span class="title function_">run05</span><span class="params">(ModelAndView modelAndView)</span>&#123;</span><br><span class="line">       modelAndView.setViewName(<span class="string">&quot;page&quot;</span>);</span><br><span class="line">       modelAndView.getModel().put(<span class="string">&quot;ac&quot;</span>,account);</span><br><span class="line">       <span class="keyword">return</span> modelAndView;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>3.5：modelAndView的构造方法存储数据</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(value = &quot;/run07&quot;,method = RequestMethod.GET)</span></span><br><span class="line">   <span class="keyword">public</span> ModelAndView <span class="title function_">run07</span><span class="params">(ModelAndView modelAndView)</span>&#123;</span><br><span class="line">       <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">ModelAndView</span>(<span class="string">&quot;page&quot;</span>,<span class="string">&quot;ac&quot;</span>,account);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>3.6：modelmap存储数据,并通过modelAndView的构造方法封装数据</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(value = &quot;/run06&quot;,method = RequestMethod.GET)</span></span><br><span class="line">    <span class="keyword">public</span> ModelAndView <span class="title function_">run06</span><span class="params">(ModelMap modelMap)</span>&#123;</span><br><span class="line">        modelMap.addAttribute(<span class="string">&quot;ac&quot;</span>,account);</span><br><span class="line">        modelMap.addAttribute(<span class="string">&quot;msg&quot;</span>,<span class="string">&quot;关羽&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">ModelAndView</span>(<span class="string">&quot;page&quot;</span>,modelMap);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>结果：<code>欢迎来到page Account(id=1, name=关羽, money=200) 关羽</code></p><h3 id="10、注册时-需要设置注册日期"><a href="#10、注册时-需要设置注册日期" class="headerlink" title="10、注册时 需要设置注册日期"></a>10、注册时 需要设置注册日期</h3><p>答： 在插入sql语句中 在指定字段使用 now() </p><p>或者 在数据库中进行设置（需要保证插入值为空值）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">create table test(</span><br><span class="line">  id integer not null auto_increment primary key,</span><br><span class="line">  name varchar(20) not null ,</span><br><span class="line">  create_time timestamp not null default CURRENT_TIMESTAMP COMMENT &#x27;创建时间&#x27;,</span><br><span class="line">  update_time timestamp not null default CURRENT_TIMESTAMP on update CURRENT_TIMESTAMP COMMENT &#x27;更新时间&#x27;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">ALTER TABLE test MODIFY create_time TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT &#x27;创建时间&#x27;;</span><br><span class="line">ALTER TABLE test MODIFY update_time TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT &#x27;更新时间&#x27;;</span><br><span class="line"></span><br><span class="line">ALTER TABLE test ADD create_time TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT &#x27;创建时间&#x27;;</span><br><span class="line">ALTER TABLE test ADD update_time TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT &#x27;更新时间&#x27;;</span><br></pre></td></tr></table></figure><p><a href="https://blog.csdn.net/A1924/article/details/117074646">参考链接</a></p><p>同时，在前端页面 layui数据表单中 需要设置</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;templet:<span class="string">&quot;&lt;div&gt;&#123;&#123;layui.util.toDateString(d.backDate,&#x27;yyyy-MM-dd HH:mm:ss&#x27;)&#125;&#125;&lt;/div&gt;&quot;</span>,</span><br><span class="line">    width: <span class="number">200</span>, title: <span class="string">&#x27;还书时间&#x27;</span>&#125;,</span><br></pre></td></tr></table></figure><h3 id="11、mybatis在执行批量更新时，优化单个执行为list-array-map执行"><a href="#11、mybatis在执行批量更新时，优化单个执行为list-array-map执行" class="headerlink" title="11、mybatis在执行批量更新时，优化单个执行为list array map执行**"></a>11、mybatis在执行批量更新时，优化单个执行为list array map执行**</h3><p>在使用array执行时，出现了报错</p><p>dao层</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">insertArrBookSubmit3</span><span class="params">(<span class="meta">@Param(&quot;readerId&quot;)</span><span class="type">int</span> readerId,Object[] ids)</span>;<span class="comment">//批量arr更新借阅信息3</span></span><br></pre></td></tr></table></figure><p>mapper文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--    修改多个图书借阅状态3 修改借阅信息--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">&quot;insertArrBookSubmit3&quot;</span> &gt;</span></span><br><span class="line">    insert into lend_list(bookId,readerId)</span><br><span class="line">    values</span><br><span class="line">    <span class="tag">&lt;<span class="name">foreach</span> <span class="attr">collection</span>=<span class="string">&quot;array&quot;</span> <span class="attr">item</span>=<span class="string">&quot;ids&quot;</span>  <span class="attr">separator</span>=<span class="string">&quot;,&quot;</span>&gt;</span></span><br><span class="line">        (#&#123;ids&#125;,#&#123;readerId&#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">foreach</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br></pre></td></tr></table></figure><p>报错信息</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[DEBUG] <span class="number">15</span>:<span class="number">19</span>:<span class="number">47.107</span> [http-apr-<span class="number">8080</span>-exec-<span class="number">9</span>] o.s.w.s.DispatcherServlet - Failed to complete request: org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.binding.BindingException: Parameter <span class="string">&#x27;array&#x27;</span> not found. Available parameters are [arg1, readerId, param1, param2] </span><br></pre></td></tr></table></figure><p>原因：</p><p><strong>有3种情况：</strong></p><p>　　　　如果传入的是单参数且参数类型是一个List的时候，collection属性值为list .或者使用传入参数中@param定义的参数名称。<br>　　　　如果传入的是单参数且参数类型是一个array数组的时候，collection的属性值为array .或者使用传入参数中@param定义的参数名称。<br>　　　　如果传入的参数是多个的时候，我们就需要把它们封装成一个Map了，当然单参数也可以封装成map，实际上如果你在传入参数的时候，在MyBatis里面也是会把它封装成一个Map的，map的key就是参数名，所以这个时候collection属性值就是传入的List或array对象在自己封装的map里面的key.</p><p>本次错误为：3、传入为多参数，所以需要使用封装成map</p><p>参考:<a href="https://www.cnblogs.com/songxingzhu/p/10457347.html">Mybatis中使用集合、数组</a></p><h3 id="12、layui显示空值日期为当前日期-修改为空值"><a href="#12、layui显示空值日期为当前日期-修改为空值" class="headerlink" title="12、layui显示空值日期为当前日期 修改为空值"></a>12、layui显示空值日期为当前日期 修改为空值</h3><p>在scrript标签中写入下面代码</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=<span class="string">&quot;text/html&quot;</span> id=<span class="string">&quot;time&quot;</span>&gt;</span><br><span class="line">    &#123;&#123;#  <span class="keyword">if</span>(d.backDate !=<span class="literal">null</span>)&#123; &#125;&#125;</span><br><span class="line">    &lt;div&gt;&#123;&#123;layui.util.toDateString(d.backDate, <span class="string">&#x27;yyyy-MM-dd HH:mm:ss&#x27;</span>)&#125;&#125;&lt;/div&gt;</span><br><span class="line">    &#123;&#123;#  &#125; <span class="keyword">else</span> &#123;&#125;&#125;</span><br><span class="line">    &lt;div&gt;&#123;&#123;&#125;&#125;&lt;/div&gt;</span><br><span class="line">    &#123;&#123;#  &#125; &#125;&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>在layui渲染中写</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;templet:<span class="string">&quot;&lt;div&gt;&#123;&#123;layui.util.toDateString(d.lendDate,&#x27;yyyy-MM-dd HH:mm:ss&#x27;)&#125;&#125;&lt;/div&gt;&quot;</span>,</span><br><span class="line">    width: <span class="number">200</span>, title: <span class="string">&#x27;借出时间&#x27;</span>&#125;,</span><br><span class="line">    </span><br><span class="line">&#123;field: <span class="string">&#x27;backDate&#x27;</span>, width: <span class="number">180</span>, title: <span class="string">&#x27;还书时间&#x27;</span>,templet:<span class="string">&quot;#time&quot;</span>&#125;,</span><br></pre></td></tr></table></figure><h3 id="13、在分模块查询时-采用模块中完成全部功能还是在模块中调用其他模块现有的功能？"><a href="#13、在分模块查询时-采用模块中完成全部功能还是在模块中调用其他模块现有的功能？" class="headerlink" title="13、在分模块查询时 采用模块中完成全部功能还是在模块中调用其他模块现有的功能？"></a>13、在分模块查询时 采用模块中完成全部功能还是在模块中调用其他模块现有的功能？</h3><p>比如</p><p>1、模块间跳转  模块内跳转 是统一写到basecontroller中进行统一跳转控制 还是模块内各跳各的</p><p>2、模块内部 需要调用其他已写好的方法 是复制后重新写 还是直接调用旧有方法</p><p>答：旧有方法可以直接调用 但是需要在service层中进行业务的处理</p><h3 id="14、在实体类中-嵌套其他类-可否随意新建新的实体"><a href="#14、在实体类中-嵌套其他类-可否随意新建新的实体" class="headerlink" title="14、在实体类中 嵌套其他类  可否随意新建新的实体"></a>14、在实体类中 嵌套其他类  可否随意新建新的实体</h3><p>比如</p><p>在借阅查询中 需要读者卡号 读者id 借阅id  是直接在lend中用readinfo中的rid 还是在lend中直接新建需要的rid 实体</p><p>答：可以新建新的实体类来接  但是会繁琐 所以最好用实体类嵌套来进行接</p><h3 id="15、分类查询中-涉及到了多表嵌套查询-如何解决找不到get方法问题"><a href="#15、分类查询中-涉及到了多表嵌套查询-如何解决找不到get方法问题" class="headerlink" title="15、分类查询中 涉及到了多表嵌套查询 如何解决找不到get方法问题"></a>15、分类查询中 涉及到了多表嵌套查询 如何解决找不到get方法问题</h3><p>答：可能有办法，但是不会</p><p>目前解决的办法为，将数据全部用String格式发送接收，之后在Controller层中进行数据的set方法进行设置属性</p><p>分页功能VO 直接用（粗暴的）String来接 getList  getTotal</p>]]></content>
      
      
      <categories>
          
          <category> java学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Math函数中常用的一些方法</title>
      <link href="/2023/01/01/Math/"/>
      <url>/2023/01/01/Math/</url>
      
        <content type="html"><![CDATA[<h2 id="Math函数中常用的一些方法"><a href="#Math函数中常用的一些方法" class="headerlink" title="Math函数中常用的一些方法"></a>Math函数中常用的一些方法</h2><ul><li>类<code>Math</code>包含用于执行基本数字运算的方法</li></ul><h2 id="算术运算"><a href="#算术运算" class="headerlink" title="算术运算"></a>算术运算</h2><ol><li><p><code>Math.abs(a)</code>：取a的绝对值</p></li><li><p><code>Math.sqrt(a)</code>：取a的平方根</p></li><li><p><code>Math.cbrt(a)</code>：取a的立方根</p></li><li><p><code>Math.max(a,b)</code>：取a、b之间的最大值</p></li><li><p><code>Math.min(a,b)</code>：取a、b之间的最小值</p></li><li><p><code>Math.pow(a,b)</code>：取a的b平方</p><h3 id="Math-abs-a-：取绝对值"><a href="#Math-abs-a-：取绝对值" class="headerlink" title="Math.abs(a) ：取绝对值"></a>Math.abs(a) ：取绝对值</h3><ul><li><table><thead><tr><th>方法</th><th>描述</th></tr></thead><tbody><tr><td><code>abs(double a)</code></td><td>返回 <code>double</code>值的绝对值。</td></tr></tbody></table></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">       <span class="comment">/*</span></span><br><span class="line"><span class="comment">        Math.abs() 取绝对值</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">System.out.println(<span class="number">7</span>);<span class="comment">//7</span></span><br><span class="line">        System.out.println(-<span class="number">7</span>);<span class="comment">//-7</span></span><br><span class="line">        System.out.println(Math.abs(<span class="number">10.3</span>));<span class="comment">//10.3</span></span><br><span class="line">        System.out.println(Math.abs(-<span class="number">10.3</span>));<span class="comment">//10.3</span></span><br><span class="line"><span class="number">1234567</span></span><br></pre></td></tr></table></figure><h3 id="Math-sqrt-a-：取平方根"><a href="#Math-sqrt-a-：取平方根" class="headerlink" title="Math.sqrt(a)：取平方根"></a>Math.sqrt(a)：取平方根</h3><ul><li><table><thead><tr><th>方法</th><th>描述</th></tr></thead><tbody><tr><td><code>sqrt(double a)</code></td><td>返回 <code>double</code>值的正确舍入正平方根。</td></tr></tbody></table></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        Math.sqrt();开平方根</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        System.out.println(Math.sqrt(<span class="number">9</span>));<span class="comment">//3.0</span></span><br><span class="line">        System.out.println(Math.sqrt(<span class="number">16</span>));<span class="comment">//4.0</span></span><br><span class="line">        System.out.println(Math.sqrt(-<span class="number">16</span>));<span class="comment">//NaN</span></span><br><span class="line"><span class="number">123456</span></span><br></pre></td></tr></table></figure><p><code>注：</code>开平方根的参数不能为负数。</p><h3 id="Math-cbrt-a-：取立方根"><a href="#Math-cbrt-a-：取立方根" class="headerlink" title="Math.cbrt(a)：取立方根"></a>Math.cbrt(a)：取立方根</h3><ul><li><table><thead><tr><th>方法</th><th>描述</th></tr></thead><tbody><tr><td><code>cbrt(double a)</code></td><td>返回 <code>double</code>值的立方根。</td></tr></tbody></table></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">        Math.cbrt();开立方根</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        System.out.println(Math.cbrt(<span class="number">8</span>));<span class="comment">//2.0</span></span><br><span class="line">        System.out.println(Math.cbrt(<span class="number">27</span>));<span class="comment">//3.0</span></span><br><span class="line">        System.out.println(Math.cbrt(-<span class="number">27</span>));<span class="comment">//-3.0</span></span><br><span class="line"><span class="number">123456</span></span><br></pre></td></tr></table></figure><h3 id="Math-max-a-b-取最大值"><a href="#Math-max-a-b-取最大值" class="headerlink" title="Math.max(a,b): 取最大值"></a>Math.max(a,b): 取最大值</h3><ul><li><table><thead><tr><th>方法</th><th>描述</th></tr></thead><tbody><tr><td><code>max(double a, double b)</code></td><td>返回两个 <code>double</code>值中较大的 <code>double</code> 。</td></tr></tbody></table></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">        System.out.println(Math.max(<span class="number">2</span>,<span class="number">3</span>));<span class="comment">//3</span></span><br><span class="line">        System.out.println(Math.max(<span class="number">5.3</span>,<span class="number">4.6</span>));<span class="comment">//5.3</span></span><br><span class="line">        System.out.println(Math.max(-<span class="number">2.7</span>,<span class="number">4</span>));<span class="comment">//4.0</span></span><br><span class="line"><span class="number">123</span></span><br></pre></td></tr></table></figure><h3 id="Math-min-a-b-：取最小值"><a href="#Math-min-a-b-：取最小值" class="headerlink" title="Math.min(a,b)：取最小值"></a>Math.min(a,b)：取最小值</h3><ul><li><table><thead><tr><th>方法</th><th>描述</th></tr></thead><tbody><tr><td><code>min(double a, double b)</code></td><td>返回两个 <code>double</code>值中较小的 <code>double</code> 。</td></tr></tbody></table></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        Math.min();取最小值</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        System.out.println(Math.min(-<span class="number">1.8</span>,<span class="number">6</span>));<span class="comment">//-1.8</span></span><br><span class="line">        System.out.println(Math.min(<span class="number">0.7</span>,<span class="number">10</span>));<span class="comment">//0.7</span></span><br><span class="line">        System.out.println(Math.min(<span class="number">19</span>,<span class="number">6</span>));<span class="comment">//6</span></span><br><span class="line"><span class="number">123456</span></span><br></pre></td></tr></table></figure><h3 id="Math-pow-a-b-：计算a的b平方"><a href="#Math-pow-a-b-：计算a的b平方" class="headerlink" title="Math.pow(a,b)：计算a的b平方"></a>Math.pow(a,b)：计算a的b平方</h3><ul><li><table><thead><tr><th>方法</th><th>描述</th></tr></thead><tbody><tr><td><code>pow(double a, double b)</code></td><td>返回第一个参数的值，该值是第二个参数的幂。</td></tr></tbody></table></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        Math.pow()</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        System.out.println(Math.pow(<span class="number">2</span>,<span class="number">0</span>));<span class="comment">//1.0</span></span><br><span class="line">        System.out.println(Math.pow(<span class="number">3</span>,<span class="number">1</span>));<span class="comment">//3.0</span></span><br><span class="line">        System.out.println(Math.pow(<span class="number">2</span>,<span class="number">2</span>));<span class="comment">//4.0</span></span><br><span class="line"><span class="number">123456</span></span><br></pre></td></tr></table></figure><h2 id="算术进位"><a href="#算术进位" class="headerlink" title="算术进位"></a>算术进位</h2><ol><li><code>Math.ceil()</code>：逢余进一</li><li><code>Math.floor()</code>：逢余舍一</li><li><code>Math.rint()</code>：四舍五入</li><li><code>Math.round()</code>：四舍五入</li></ol><h3 id="Math-ceil-a-取大于等于a的最小整数"><a href="#Math-ceil-a-取大于等于a的最小整数" class="headerlink" title="Math.ceil(a):取大于等于a的最小整数"></a>Math.ceil(a):取大于等于a的最小整数</h3><ul><li><table><thead><tr><th>方法</th><th>描述</th></tr></thead><tbody><tr><td><code>ceil(double a)</code></td><td>返回大于或等于参数且等于整数的最小值 <code>double</code> 。</td></tr></tbody></table></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">        Math.ceil()</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">System.out.println(Math.ceil(<span class="number">10.2</span>));<span class="comment">//11.0</span></span><br><span class="line">        System.out.println(Math.ceil(<span class="number">9.8</span>));<span class="comment">//10.0</span></span><br><span class="line">        System.out.println(Math.ceil(-<span class="number">10.2</span>));<span class="comment">//-10.0</span></span><br><span class="line"><span class="number">123456</span></span><br></pre></td></tr></table></figure><h3 id="Math-floor-a-：取小于等于a的最大整数"><a href="#Math-floor-a-：取小于等于a的最大整数" class="headerlink" title="Math.floor(a)：取小于等于a的最大整数"></a>Math.floor(a)：取小于等于a的最大整数</h3><ul><li><table><thead><tr><th>方法</th><th>描述</th></tr></thead><tbody><tr><td><code>floor(double a)</code></td><td>返回小于或等于参数且等于整数的最大值<code>double</code> 。</td></tr></tbody></table></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        Math.floor()</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        System.out.println(Math.floor(<span class="number">1.3</span>));<span class="comment">//1.0</span></span><br><span class="line">        System.out.println(Math.floor(<span class="number">0.8</span>));<span class="comment">//0.0</span></span><br><span class="line">        System.out.println(Math.floor(<span class="number">10.5</span>));<span class="comment">//10.0</span></span><br><span class="line">        System.out.println(Math.floor(-<span class="number">100.9</span>));<span class="comment">//-101.0</span></span><br><span class="line"><span class="number">1234567</span></span><br></pre></td></tr></table></figure><h3 id="Math-rint-四舍五入，返回double值"><a href="#Math-rint-四舍五入，返回double值" class="headerlink" title="Math.rint():四舍五入，返回double值"></a>Math.rint():四舍五入，返回double值</h3><ul><li><table><thead><tr><th>方法</th><th>描述</th></tr></thead><tbody><tr><td><code>rint(double a)</code></td><td>返回与 <code>double</code>值最接近的 <code>double</code>值，该值等于数学整数。</td></tr></tbody></table></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">System.out.println(Math.rint(<span class="number">10.1</span>));<span class="comment">//10.0</span></span><br><span class="line">        System.out.println(Math.rint(<span class="number">10.5</span>));<span class="comment">//10.0</span></span><br><span class="line">        System.out.println(Math.rint(<span class="number">10.8</span>));<span class="comment">//11.0</span></span><br><span class="line">        System.out.println(Math.rint(<span class="number">0.2</span>));<span class="comment">//0.0</span></span><br><span class="line">        System.out.println(Math.rint(<span class="number">0.5</span>));<span class="comment">//0.0</span></span><br><span class="line">        System.out.println(Math.rint(<span class="number">0.8</span>));<span class="comment">//1.0</span></span><br><span class="line">        System.out.println(Math.rint(-<span class="number">0.2</span>));<span class="comment">//-0.0</span></span><br><span class="line">        System.out.println(Math.rint(-<span class="number">0.5</span>));<span class="comment">//-0.0</span></span><br><span class="line">        System.out.println(Math.rint(-<span class="number">0.8</span>));<span class="comment">//-1.0</span></span><br><span class="line">        System.out.println(Math.rint(-<span class="number">10.2</span>));<span class="comment">//-10.0</span></span><br><span class="line">        System.out.println(Math.rint(-<span class="number">10.8</span>));<span class="comment">//-11.0</span></span><br><span class="line">        System.out.println(Math.rint(-<span class="number">10.5</span>));<span class="comment">//-10.0</span></span><br><span class="line"><span class="number">123456789101112</span></span><br></pre></td></tr></table></figure><p><code>注</code>：在0.5时取偶数</p><h3 id="Math-round-四舍五入，double时返回long值，float时返回int值"><a href="#Math-round-四舍五入，double时返回long值，float时返回int值" class="headerlink" title="Math.round():四舍五入，double时返回long值，float时返回int值"></a>Math.round():四舍五入，double时返回long值，float时返回int值</h3><ul><li><table><thead><tr><th>方法</th><th>描述</th></tr></thead><tbody><tr><td><code>round(double a)</code></td><td>返回与参数最接近的 <code>long</code> ，并将关系四舍五入为正无穷大。</td></tr><tr><td><code>round(float a)</code></td><td>返回与参数最接近的 <code>int</code> ，并将关系四舍五入为正无穷大。</td></tr></tbody></table></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">        System.out.println(Math.round(<span class="number">10.1</span>));<span class="comment">//10</span></span><br><span class="line">        System.out.println(Math.round(<span class="number">10.5</span>));<span class="comment">//11</span></span><br><span class="line">        System.out.println(Math.round(<span class="number">10.53</span>));<span class="comment">//11</span></span><br><span class="line">        System.out.println(Math.round(<span class="number">10.8</span>));<span class="comment">//11</span></span><br><span class="line">        System.out.println(Math.round(-<span class="number">10.1</span>));<span class="comment">//-10</span></span><br><span class="line">        System.out.println(Math.round(-<span class="number">10.5</span>));<span class="comment">//-10</span></span><br><span class="line">        System.out.println(Math.round(-<span class="number">10.53</span>));<span class="comment">//-11</span></span><br><span class="line">        System.out.println(Math.round(-<span class="number">10.9</span>));<span class="comment">//-11</span></span><br><span class="line"><span class="number">12345678</span></span><br></pre></td></tr></table></figure><p><code>注</code>：四舍五入，float时返回int值，double时返回long值</p><h2 id="随机数"><a href="#随机数" class="headerlink" title="随机数"></a>随机数</h2><p>Math.random() 随机数，在范围 [0.0,1.0) 内随机取一个值</p><ul><li><table><thead><tr><th>方法</th><th>描述</th></tr></thead><tbody><tr><td><code>random()</code></td><td>返回带有正号的 <code>double</code>值，大于或等于 <code>0.0</code>且小于 <code>1.0</code> 。</td></tr></tbody></table></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">        System.out.println(Math.random());<span class="comment">//[0.0,1.0)</span></span><br><span class="line">        System.out.println(Math.random()+<span class="number">1</span>);<span class="comment">//[1.0,2.0)</span></span><br><span class="line">        System.out.println(Math.random()*<span class="number">10</span>);<span class="comment">//[0.0,10.0)</span></span><br><span class="line">        System.out.println(Math.random()*<span class="number">10</span>+<span class="number">1</span>);<span class="comment">//[1.0,11.0)</span></span><br><span class="line">        System.out.println(Math.random()*<span class="number">100</span>+<span class="number">0.5</span>);<span class="comment">//[0.5,100.5)</span></span><br><span class="line"><span class="number">12345</span></span><br></pre></td></tr></table></figure><p><code>注</code>：返回类型为double类型。</p><h2 id="三角函数"><a href="#三角函数" class="headerlink" title="三角函数"></a>三角函数</h2><ol><li><code>Math.sin()</code>：正弦</li><li><code>Math.cos()</code>：余弦</li><li><code>Math.ten()</code>：正切</li></ol><h3 id="sin-：正弦"><a href="#sin-：正弦" class="headerlink" title="sin()：正弦"></a>sin()：正弦</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">double</span> <span class="title function_">sin</span><span class="params">(<span class="type">double</span> a)</span></span><br><span class="line"><span class="number">1</span></span><br></pre></td></tr></table></figure><p>返回角度的三角正弦值。 特别案例：</p><ul><li>如果参数是NaN或无穷大，则结果为NaN。</li><li>如果参数为零，则结果为零，其参数符号相同。</li></ul><p>参数 ：</p><ul><li>a - 角度，以弧度表示。</li></ul><p>（一周的弧度数为2πr&#x2F;r&#x3D;2π，360°角&#x3D;2π弧度，因此，1弧度约为57.3°，即57°17’44.806’’，1°为π&#x2F;180弧度）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">double</span> <span class="variable">PI</span> <span class="operator">=</span> Math.PI;<span class="comment">//double值比任何其他 pi更接近，圆的圆周与其直径的比率。</span></span><br><span class="line">System.out.println(Math.sin(<span class="number">0</span>));<span class="comment">//0.0</span></span><br><span class="line">System.out.println(Math.sin(<span class="number">6.28</span>));<span class="comment">//-0.0031853017931379904</span></span><br><span class="line">System.out.println(Math.sin(<span class="number">9.42</span>));<span class="comment">//0.0047779425901285115</span></span><br><span class="line">System.out.println(Math.sin(<span class="number">1.57</span>));<span class="comment">//0.9999996829318346</span></span><br><span class="line">System.out.println(Math.sin(<span class="number">3.14</span>));<span class="comment">//0.0015926529164868282</span></span><br><span class="line"><span class="number">123456</span></span><br></pre></td></tr></table></figure><p><code>注</code>：输入的是以弧度值表示，返回的值在范围<code>[-1,1]</code>内</p><h3 id="cos-：余弦"><a href="#cos-：余弦" class="headerlink" title="cos()：余弦"></a>cos()：余弦</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">double</span> <span class="title function_">cos</span><span class="params">(<span class="type">double</span> a)</span></span><br><span class="line"><span class="number">1</span></span><br></pre></td></tr></table></figure><p>返回角度的三角余弦值。 特别案例：</p><ul><li>如果参数是NaN或无穷大，则结果为NaN。</li><li>结果必须是半单调的</li></ul><p>。</p><p>参数</p><ul><li>a - 角度，以弧度表示。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">System.out.println(Math.cos(<span class="number">0</span>));<span class="comment">//1.0</span></span><br><span class="line">System.out.println(Math.cos(<span class="number">1.57</span>));<span class="comment">//7.963267107332633E-4</span></span><br><span class="line">System.out.println(Math.cos(<span class="number">3.14</span>));<span class="comment">//-0.9999987317275395</span></span><br><span class="line">System.out.println(Math.cos(<span class="number">4.71</span>));<span class="comment">//-0.0023889781122815386</span></span><br><span class="line">System.out.println(Math.cos(<span class="number">6.28</span>));<span class="comment">//-0.9999987317275395</span></span><br><span class="line"><span class="number">12345</span></span><br></pre></td></tr></table></figure><p><code>注</code>：输入的是以弧度值表示，返回的值在范围<code>[-1,1]</code>内</p><h3 id="ten-：正切"><a href="#ten-：正切" class="headerlink" title="ten()：正切"></a>ten()：正切</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">double</span> <span class="title function_">tan</span><span class="params">(<span class="type">double</span> a)</span></span><br><span class="line"><span class="number">1</span></span><br></pre></td></tr></table></figure><p>返回角度的三角正切。 特别案例：</p><ul><li>如果参数是NaN或无穷大，则结果为NaN。</li><li>如果参数为零，则结果为零，其参数符号相同。</li></ul><p>计算结果必须在精确结果的1 ulp范围内。 结果必须是半单调的。</p><p>参数</p><ul><li>a - 角度，以弧度表示。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">System.out.println(Math.tan(<span class="number">0</span>));<span class="comment">//0.0</span></span><br><span class="line">System.out.println(Math.tan(<span class="number">1.57</span>));<span class="comment">//1255.7655915007897</span></span><br><span class="line">System.out.println(Math.tan(<span class="number">3.14</span>));<span class="comment">//-0.001592654936407223</span></span><br><span class="line">System.out.println(Math.tan(<span class="number">4.71</span>));<span class="comment">//418.58782265388515</span></span><br><span class="line">System.out.println(Math.tan(<span class="number">6.28</span>));<span class="comment">//-0.003185317952531891</span></span><br><span class="line"><span class="number">12345</span></span><br></pre></td></tr></table></figure><p><code>注</code>：<code>ten90°</code>不存在<br>即输入的弧度不能为（π&#x2F;2±kπ）返回的值在范围<code>[-∞,+∞]</code>内</p><hr><h2 id="静态常量"><a href="#静态常量" class="headerlink" title="静态常量"></a>静态常量</h2><p>Math 类中包含 E 和 PI 两个静态常量，正如它们名字所暗示的，它们的值分别等于 e（自然对数）和 π（圆周率）。</p><h4 id="例-1"><a href="#例-1" class="headerlink" title="例 1"></a>例 1</h4><p>调用 Math 类的 E 和 PI 两个常量，并将结果输出。代码如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">System.out.println(&quot;E 常量的值：&quot; + Math.E);System.out.println(&quot;PI 常量的值：&quot; + Math.PI);</span><br></pre></td></tr></table></figure><p>执行上述代码，输出结果如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">E 常量的值：2.718281828459045</span><br><span class="line">PI 常量的值：3.141592653589793</span><br></pre></td></tr></table></figure><h2 id="求最大值、最小值和绝对值"><a href="#求最大值、最小值和绝对值" class="headerlink" title="求最大值、最小值和绝对值"></a>求最大值、最小值和绝对值</h2><p>在程序中常见的就是求最大值、最小值和绝对值问题，如果使用 Math 类提供的方法可以很容易实现。这些方法的说明如表 1 所示。</p><table><thead><tr><th>方法</th><th>说明</th></tr></thead><tbody><tr><td>static int abs(int a)</td><td>返回 a 的绝对值</td></tr><tr><td>static long abs(long a)</td><td>返回 a 的绝对值</td></tr><tr><td>static float abs(float a)</td><td>返回 a 的绝对值</td></tr><tr><td>static double abs(double a)</td><td>返回 a 的绝对值</td></tr><tr><td>static int max(int x,int y)</td><td>返回 x 和 y 中的最大值</td></tr><tr><td>static double max(double x,double y)</td><td>返回 x 和 y 中的最大值</td></tr><tr><td>static long max(long x,long y)</td><td>返回 x 和 y 中的最大值</td></tr><tr><td>static float max(float x,float y)</td><td>返回 x 和 y 中的最大值</td></tr><tr><td>static int min(int x,int y)</td><td>返回 x 和 y 中的最小值</td></tr><tr><td>static long min(long x,long y)</td><td>返回 x 和 y 中的最小值</td></tr><tr><td>static double min(double x,double y)</td><td>返回 x 和 y 中的最小值</td></tr><tr><td>static float min(float x,float y)</td><td>返回 x 和 y 中的最小值</td></tr></tbody></table><h4 id="例-2"><a href="#例-2" class="headerlink" title="例 2"></a>例 2</h4><p>求 10 和 20 的较大值、15.6 和 15 的较小值、-12 的绝对值，代码如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">public class Test02 &#123;    public static void main(String[] args) &#123;        System.out.println(&quot;10 和 20 的较大值：&quot; + Math.max(10, 20));        System.out.println(&quot;15.6 和 15 的较小值：&quot; + Math.min(15.6, 15));        System.out.println(&quot;-12 的绝对值：&quot; + Math.abs(-12));    &#125;&#125;</span><br></pre></td></tr></table></figure><p>该程序的运行结果如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">10和20的较大值：20</span><br><span class="line">15.6和15的较小值：15.0</span><br><span class="line">-12的绝对值：12</span><br></pre></td></tr></table></figure><h2 id="求整运算"><a href="#求整运算" class="headerlink" title="求整运算"></a>求整运算</h2><p>Math 类的求整方法有很多，详细说明如表 2 所示。</p><table><thead><tr><th>方法</th><th>说明</th></tr></thead><tbody><tr><td>static double ceil(double a)</td><td>返回大于或等于 a 的最小整数</td></tr><tr><td>static double floor(double a)</td><td>返回小于或等于 a 的最大整数</td></tr><tr><td>static double rint(double a)</td><td>返回最接近 a 的整数值，如果有两个同样接近的整数，则结果取偶数</td></tr><tr><td>static int round(float a)</td><td>将参数加上 1&#x2F;2 后返回与参数最近的整数</td></tr><tr><td>static long round(double a)</td><td>将参数加上 1&#x2F;2 后返回与参数最近的整数，然后强制转换为长整型</td></tr></tbody></table><h4 id="例-3"><a href="#例-3" class="headerlink" title="例 3"></a>例 3</h4><p>下面的实例演示了 Math 类中取整函数方法的应用：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">import java.util.Scanner;public class Test03 &#123;    public static void main(String[] args) &#123;        Scanner input = new Scanner(System.in);        System.outprintln(&quot;请输入一个数字：&quot;);        double num = input.nextDouble();        System.out.println(&quot;大于或等于 &quot;+ num +&quot; 的最小整数：&quot; + Math.ceil(num));        System.out.println(&quot;小于或等于 &quot;+ num +&quot; 的最大整数：&quot; + Math.floor(num));        System.out.println(&quot;将 &quot;+ num +&quot; 加上 0.5 之后最接近的整数：&quot; + Math.round(num));        System.out.println(&quot;最接近 &quot;+num+&quot; 的整数：&quot; + Math.rint(num));    &#125;&#125;</span><br></pre></td></tr></table></figure><p>执行结果如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">请输入一个数字：</span><br><span class="line">99.01</span><br><span class="line">大于或等于 99.01 的最小整数：100.0</span><br><span class="line">小于或等于 99.01 的最大整数：99.0</span><br><span class="line">将 99.01 加上 0.5 之后最接近的整数：100</span><br><span class="line">最接近 99.01 的整数：99.0</span><br></pre></td></tr></table></figure><h2 id="三角函数运算"><a href="#三角函数运算" class="headerlink" title="三角函数运算"></a>三角函数运算</h2><p>Math 类中包含的三角函数方法及其说明如表 3 所示。</p><table><thead><tr><th>方法</th><th>说明</th></tr></thead><tbody><tr><td>static double sin(double a)</td><td>返回角的三角正弦值，参数以孤度为单位</td></tr><tr><td>static double cos(double a)</td><td>返回角的三角余弦值，参数以孤度为单位</td></tr><tr><td>static double asin(double a)</td><td>返回一个值的反正弦值，参数域在 [-1,1]，值域在 [-PI&#x2F;2,PI&#x2F;2]</td></tr><tr><td>static double acos(double a)</td><td>返回一个值的反余弦值，参数域在 [-1,1]，值域在 [0.0,PI]</td></tr><tr><td>static double tan(double a)</td><td>返回角的三角正切值，参数以弧度为单位</td></tr><tr><td>static double atan(double a)</td><td>返回一个值的反正切值，值域在 [-PI&#x2F;2,PI&#x2F;2]</td></tr><tr><td>static double toDegrees(double angrad)</td><td>将用孤度表示的角转换为近似相等的用角度表示的角</td></tr><tr><td>staticdouble toRadians(double angdeg)</td><td>将用角度表示的角转换为近似相等的用弧度表示的角</td></tr></tbody></table><p>在表 3 中，每个方法的参数和返回值都是 double 类型，参数以弧度代替角度来实现，其中 1 度等于 π&#x2F;180 弧度，因此平角就是 π 弧度。</p><h4 id="例-4"><a href="#例-4" class="headerlink" title="例 4"></a>例 4</h4><p>计算 90 度的正弦值、0 度的余弦值、1 的反正切值、120 度的弧度值，代码如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">public class Test04 &#123;    public static void main(String[] args) &#123;        System.out.println&#123;&quot;90 度的正弦值：&quot; + Math.sin(Math.PI/2));        System.out.println(&quot;0 度的余弦值：&quot; + Math.cos(0));        System.out.println(&quot;1 的反正切值：&quot; + Math.atan(l));        System.out.println(&quot;120 度的弧度值：&quot; + Math.toRadians(120.0));    &#125;&#125;</span><br></pre></td></tr></table></figure><p>在上述代码中，因为 Math.sin() 中的参数的单位是弧度，而 90 度表示的是角度，因此需要将 90 度转换为弧度，即 Math.PI&#x2F;180*90，故转换后的弧度为 Math.PI&#x2F;2，然后调用 Math 类中的 sin() 方法计算其正弦值。</p><p>该程序的运行结果如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">90 度的正弦值：1.0</span><br><span class="line">0 的余弦值：1.0</span><br><span class="line">1 的反正切值：0.7853981633974483</span><br><span class="line">120 度的弧度值：2.0943951023931953</span><br></pre></td></tr></table></figure><h2 id="指数运算"><a href="#指数运算" class="headerlink" title="指数运算"></a>指数运算</h2><p>指数的运算包括求方根、取对数及其求 n 次方的运算。在 Math 类中定义的指数运算方法及其说明如表 4 所示。</p><table><thead><tr><th>方法</th><th>说明</th></tr></thead><tbody><tr><td>static double exp(double a)</td><td>返回 e 的 a 次幂</td></tr><tr><td>static double pow(double a,double b)</td><td>返回以 a 为底数，以 b 为指数的幂值</td></tr><tr><td>static double sqrt(double a)</td><td>返回 a 的平方根</td></tr><tr><td>static double cbrt(double a)</td><td>返回 a 的立方根</td></tr><tr><td>static double log(double a)</td><td>返回 a 的自然对数，即 lna 的值</td></tr><tr><td>static double log10(double a)</td><td>返回以 10 为底 a 的对数</td></tr></tbody></table><h4 id="例-5"><a href="#例-5" class="headerlink" title="例 5"></a>例 5</h4><p>使用 Math 类中的方法实现指数的运算，main() 方法中的代码如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">public class Test05 &#123;    public static void main(String[] args) &#123;        System.out.println(&quot;4 的立方值：&quot; + Math.pow(4, 3));        System.out.println(&quot;16 的平方根：&quot; + Math.sqrt(16));        System.out.println(&quot;10 为底 2 的对数：&quot; + Math.log1O(2));    &#125;&#125;</span><br></pre></td></tr></table></figure><p>该程序的运行结果如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">4 的立方值：64.0</span><br><span class="line">16 的平方根：4.0</span><br><span class="line">10 为底 2 的对数：0.3010299956639812</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title>相册集</title>
      <link href="/album/index.html"/>
      <url>/album/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>关于</title>
      <link href="/about/index.html"/>
      <url>/about/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>留言板</title>
      <link href="/comments/index.html"/>
      <url>/comments/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/home.css"/>
      <url>/css/home.css</url>
      
        <content type="html"><![CDATA[#recent-posts > .recent-post-item:not(a)::before {    content: "";    position: absolute;    top: 0;    left: 0;    width: 100%;    height: 200%;    background: linear-gradient(to right, transparent, white, transparent);    transform: translateX(-200%);    transition: transform 0.5s linear;    z-index: 1;  }  #recent-posts > .recent-post-item:not(a):hover::before {    transform: translateX(100%) skewX(-60deg);  }]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/about-tag.css"/>
      <url>/css/about-tag.css</url>
      
        <content type="html"><![CDATA[@keyframes floating {    0% {        transform: translate(0, -4px);    }    50% {        transform: translate(0, 4px);    }    100% {        transform: translate(0, -4px);    }    }        #about-page .author-box {    display: flex;    flex-direction: column;    align-items: center;    height: 185px;    }        #about-page .author-tag-left {    display: flex;    flex-direction: column;    align-items: flex-end;    margin-right: 355px; /* 设置标签与头像之间的水平间距 */    position: absolute;    top: 15px;    }        #about-page .author-tag-right {    display: flex;    flex-direction: column;    align-items: flex-start;    margin-left: 355px; /* 设置标签与头像之间的水平间距 */    position: absolute;    top: 15px;    }    /* 移动端隐藏 */    @media screen and (max-width: 768px) {    #about-page .author-tag-left, #about-page .author-tag-right {        display: none;    }    }        #about-page .author-tag-left .author-tag:first-child, #about-page .author-tag-left .author-tag:last-child {    margin-right: -16px;    }        #about-page .author-tag-right .author-tag:first-child, #about-page .author-tag-right .author-tag:last-child {    margin-left: -16px;    }        #about-page .author-tag {    transform: translate(0, -4px);    padding: 1px 8px;    background: #fff;    border: 1px solid #e3e8f7;    border-radius: 40px;    margin-top: 6px;    font-size: 14px;    font-weight: bold;    box-shadow: 0 5px 12px -5px rgba(102, 68, 68, 0.00);    animation: 4s ease-in-out 0s infinite normal none running floating;    }    /* 适配深色模式 */    [data-theme="dark"] #about-page .author-tag {    background: #1e1e1e;    }    #about-page .author-tag:nth-child(1) {    animation-delay: 0s;    }        #about-page .author-tag:nth-child(2) {    animation-delay: 0.6s;    }        #about-page .author-tag:nth-child(3) {    animation-delay: 1.2s;    }        #about-page .author-tag:nth-child(4) {    animation-delay: 1.8s;    }]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>dailyPhoto</title>
      <link href="/dailyPhoto/index.html"/>
      <url>/dailyPhoto/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>我的装备</title>
      <link href="/equipment/index.html"/>
      <url>/equipment/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/welcome.css"/>
      <url>/css/welcome.css</url>
      
        <content type="html"><![CDATA[#welcome-info {    overflow: hidden;    border-radius: 14px;    --kouseki-welcome-color: #49B1F5;    --kouseki-ip-color: #49B1F5;    --kouseki-gl-size: 16px!important;  }]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/welcome.js"/>
      <url>/js/welcome.js</url>
      
        <content type="html"><![CDATA[//get请求$.ajax({    type: 'get',    url: 'https://apis.map.qq.com/ws/location/v1/ip',    data: {        key: 'LBHBZ-I4O6A-3AEKI-CKCM7-473R3-LUB36',        output: 'jsonp',    },    dataType: 'jsonp',    success: function (res) {        ipLocation = res;    }})function getDistance(e1, n1, e2, n2) {    const R = 6371    const { sin, cos, asin, PI, hypot } = Math    let getPoint = (e, n) => {        e *= PI / 180        n *= PI / 180        return { x: cos(n) * cos(e), y: cos(n) * sin(e), z: sin(n) }    }    let a = getPoint(e1, n1)    let b = getPoint(e2, n2)    let c = hypot(a.x - b.x, a.y - b.y, a.z - b.z)    let r = asin(c / 2) * 2 * R    return Math.round(r);}function showWelcome() {    let dist = getDistance(118.80242, 32.06465, ipLocation.result.location.lng, ipLocation.result.location.lat); //这里记得换成自己的经纬度    let pos = ipLocation.result.ad_info.nation;    let ip;    let posdesc;    //根据国家、省份、城市信息自定义欢迎语    switch (ipLocation.result.ad_info.nation) {        case "日本":            posdesc = "よろしく，一起去看樱花吗";            break;        case "美国":            posdesc = "Let us live in peace!";            break;        case "英国":            posdesc = "想同你一起夜乘伦敦眼";            break;        case "俄罗斯":            posdesc = "干了这瓶伏特加！";            break;        case "法国":            posdesc = "C'est La Vie";            break;        case "德国":            posdesc = "Die Zeit verging im Fluge.";            break;        case "澳大利亚":            posdesc = "一起去大堡礁吧！";            break;        case "加拿大":            posdesc = "拾起一片枫叶赠予你";            break;        case "中国":            pos = ipLocation.result.ad_info.province + " " + ipLocation.result.ad_info.city + " " + ipLocation.result.ad_info.district;            ip = ipLocation.result.ip;            switch (ipLocation.result.ad_info.province) {                case "北京市":                    posdesc = "北——京——欢迎你~~~";                    break;                case "天津市":                    posdesc = "讲段相声吧";                    break;                case "河北省":                    posdesc = "山势巍巍成壁垒，天下雄关铁马金戈由此向，无限江山";                    break;                case "山西省":                    posdesc = "展开坐具长三尺，已占山河五百余";                    break;                case "内蒙古自治区":                    posdesc = "天苍苍，野茫茫，风吹草低见牛羊";                    break;                case "辽宁省":                    posdesc = "我想吃烤鸡架！";                    break;                case "吉林省":                    posdesc = "状元阁就是东北烧烤之王";                    break;                case "黑龙江省":                    posdesc = "很喜欢哈尔滨大剧院";                    break;                case "上海市":                    posdesc = "众所周知，中国只有两个城市";                    break;                case "江苏省":                    switch (ipLocation.result.ad_info.city) {                        case "南京市":                            posdesc = "这是我挺想去的城市啦";                            break;                        case "苏州市":                            posdesc = "上有天堂，下有苏杭";                            break;                        default:                            posdesc = "散装是必须要散装的";                            break;                    }                    break;                case "浙江省":                    posdesc = "东风渐绿西湖柳，雁已还人未南归";                    break;                case "河南省":                    switch (ipLocation.result.ad_info.city) {                        case "郑州市":                            posdesc = "豫州之域，天地之中";                            break;                        case "南阳市":                            posdesc = "臣本布衣，躬耕于南阳此南阳非彼南阳！";                            break;                        case "驻马店市":                            posdesc = "峰峰有奇石，石石挟仙气嵖岈山的花很美哦！";                            break;                        case "开封市":                            posdesc = "刚正不阿包青天";                            break;                        case "洛阳市":                            posdesc = "洛阳牡丹甲天下";                            break;                        default:                            posdesc = "可否带我品尝河南烩面啦？";                            break;                    }                    break;                case "安徽省":                    posdesc = "蚌埠住了，芜湖起飞";                    break;                case "福建省":                    posdesc = "井邑白云间，岩城远带山";                    break;                case "江西省":                    posdesc = "落霞与孤鹜齐飞，秋水共长天一色";                    break;                case "山东省":                    posdesc = "遥望齐州九点烟，一泓海水杯中泻";                    break;                case "湖北省":                    switch (ipLocation.result.ad_info.city) {                        case "黄冈市":                            posdesc = "红安将军县！辈出将才！";                            break;                        default:                            posdesc = "来碗热干面~";                            break;                    }                    break;                case "湖南省":                    posdesc = "74751，长沙斯塔克";                    break;                case "广东省":                    switch (ipLocation.result.ad_info.city) {                        case "广州市":                            posdesc = "看小蛮腰，喝早茶了嘛~";                            break;                        case "深圳市":                            posdesc = "今天你逛商场了嘛~";                            break;                        case "阳江市":                            posdesc = "阳春合水！博主家乡~ 欢迎来玩~";                            break;                        default:                            posdesc = "来两斤福建人~";                            break;                    }                    break;                case "广西壮族自治区":                    posdesc = "桂林山水甲天下";                    break;                case "海南省":                    posdesc = "朝观日出逐白浪，夕看云起收霞光";                    break;                case "四川省":                    posdesc = "康康川妹子";                    break;                case "贵州省":                    posdesc = "茅台，学生，再塞200";                    break;                case "云南省":                    posdesc = "玉龙飞舞云缠绕，万仞冰川直耸天";                    break;                case "西藏自治区":                    posdesc = "躺在茫茫草原上，仰望蓝天";                    break;                case "陕西省":                    posdesc = "来份臊子面加馍";                    break;                case "甘肃省":                    posdesc = "羌笛何须怨杨柳，春风不度玉门关";                    break;                case "青海省":                    posdesc = "牛肉干和老酸奶都好好吃";                    break;                case "宁夏回族自治区":                    posdesc = "大漠孤烟直，长河落日圆";                    break;                case "新疆维吾尔自治区":                    posdesc = "驼铃古道丝绸路，胡马犹闻唐汉风";                    break;                case "台湾省":                    posdesc = "我在这头，大陆在那头";                    break;                case "香港特别行政区":                    posdesc = "永定贼有残留地鬼嚎，迎击光非岁玉";                    break;                case "澳门特别行政区":                    posdesc = "性感荷官，在线发牌";                    break;                default:                    posdesc = "带我去你的城市逛逛吧！";                    break;            }            break;        default:            posdesc = "带我去你的国家逛逛吧";            break;    }    //根据本地时间切换欢迎语    let timeChange;    let date = new Date();    if (date.getHours() >= 5 && date.getHours() < 11) timeChange = "<span>🌤️ 早上好，一日之计在于晨</span>";    else if (date.getHours() >= 11 && date.getHours() < 13) timeChange = "<span>☀️ 中午好，记得午休喔~</span>";    else if (date.getHours() >= 13 && date.getHours() < 17) timeChange = "<span>🕞 下午好，饮茶先啦！</span>";    else if (date.getHours() >= 17 && date.getHours() < 19) timeChange = "<span>🚶‍♂️ 即将下班，记得按时吃饭~</span>";    else if (date.getHours() >= 19 && date.getHours() < 24) timeChange = "<span>🌙 晚上好，夜生活嗨起来！</span>";    else timeChange = "夜深了，早点休息，少熬夜";// 新增ipv6显示为指定内容    if (ip.includes(":")) {        ip = "<br>好复杂，咱看不懂~(ipv6)";    }    try {        //自定义文本和需要放的位置        document.getElementById("welcome-info").innerHTML =            `欢迎来自 <b><span style="color: var(--kouseki-ip-color);font-size: var(--kouseki-gl-size)">${pos}</span></b> 的小友💖<br>${posdesc}🍂<br>当前位置距博主约 <b><span style="color: var(--kouseki-ip-color)">${dist}</span></b> 公里！<br>您的IP地址为：<b><span>${ip}</span></b><br>${timeChange} <br>`;    } catch (err) {         console.log("Pjax无法获取元素")    }}window.onload = showWelcome;// 如果使用了pjax在加上下面这行代码document.addEventListener('pjax:complete', showWelcome);]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>分类</title>
      <link href="/categories/index.html"/>
      <url>/categories/index.html</url>
      
        <content type="html"><![CDATA[<style>  #libCategories .card-wrap:hover .card-info:after {    width: 300%;  }</style><link rel="stylesheet" type="text/css" href="https://npm.elemecdn.com/js-heo@1.0.11/3dCard/no3d.css"><div id='libCategories'><div id="lib-cards" class="container"><a href='javascript:void(0);' onClick='pjax.loadUrl("/categories/java学习/")'><card data-image="https://bu.dusays.com/2023/05/15/64623927bcd8d.png"><h1 slot="header">学习</h1><p slot="content">学习之路长且艰。</p></card></a><a href='javascript:void(0);' onClick='pjax.loadUrl("/categories/日常生活/")'>  <card data-image="https://bu.dusays.com/2023/05/15/6462393d88cba.png">    <h1 slot="header">日常生活</h1>    <p slot="content">在生活中发生的一些事儿。</p>  </card></a><a href='javascript:void(0);' onClick='pjax.loadUrl("/categories/其他/")'>  <card data-image="https://bu.dusays.com/2023/05/15/6462395407a57.png">    <h1 slot="header">其他</h1>    <p slot="content">一些别的事情</p>  </card></a></div></div><script src='https://lf6-cdn-tos.bytecdntp.com/cdn/expire-1-M/vue/2.6.14/vue.min.js' data-pjax></script><script type="text/javascript" src="https://npm.elemecdn.com/anzhiyu-theme-static@1.0.7/no3d/no3d.js" data-pjax></script>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/json/music.json"/>
      <url>/json/music.json</url>
      
        <content type="html"><![CDATA[[{"name":"青花瓷","artist":"周杰伦","url":"https://npm.elemecdn.com/anzhiyu-music@1.0.4/青花瓷/青花瓷.mp3","cover":"https://y.qq.com/music/photo_new/T002R300x300M000002eFUFm2XYZ7z_2.jpg?max_age=2592000","lrc":"https://npm.elemecdn.com/anzhiyu-music@1.0.4/青花瓷/青花瓷.lrc"},{"name":"稻香","artist":"周杰伦","url":"https://npm.elemecdn.com/anzhiyu-music@1.0.1/周杰伦/稻香/稻香.mp3","cover":"https://y.qq.com/music/photo_new/T002R300x300M000002Neh8l0uciQZ_1.jpg?max_age=2592000","lrc":"https://npm.elemecdn.com/anzhiyu-music@1.0.1/周杰伦/稻香/稻香.lrc"},{"name":"晴天","artist":"周杰伦","url":"https://npm.elemecdn.com/anzhiyu-music@1.0.2/晴天/晴天.mp3","cover":"https://y.qq.com/music/photo_new/T002R300x300M000000MkMni19ClKG_3.jpg?max_age=2592000","lrc":"https://npm.elemecdn.com/anzhiyu-music@1.0.2/晴天/晴天.lrc"},{"name":"七里香","artist":"周杰伦","url":"https://npm.elemecdn.com/anzhiyu-music@1.0.2/七里香/七里香.mp3","cover":"https://y.qq.com/music/photo_new/T002R300x300M000003DFRzD192KKD_1.jpg?max_age=2592000","lrc":"https://npm.elemecdn.com/anzhiyu-music@1.0.2/七里香/七里香.lrc"},{"name":"花海","artist":"周杰伦","url":"https://npm.elemecdn.com/anzhiyu-music-jay@1.0.1/花海/花海.flac","cover":"https://y.qq.com/music/photo_new/T002R300x300M000002Neh8l0uciQZ_1.jpg?max_age=2592000","lrc":"https://npm.elemecdn.com/anzhiyu-music-jay@1.0.1/花海/花海.lrc"},{"name":"反方向的钟","artist":"周杰伦","url":"https://npm.elemecdn.com/anzhiyu-music-jay@1.0.1/反方向的钟/反方向的钟.flac","cover":"https://y.qq.com/music/photo_new/T002R300x300M000000f01724fd7TH_1.jpg?max_age=2592000","lrc":"https://npm.elemecdn.com/anzhiyu-music-jay@1.0.1/反方向的钟/反方向的钟.lrc"},{"name":"兰亭序","artist":"周杰伦","url":"https://npm.elemecdn.com/anzhiyu-music@1.0.1/周杰伦/兰亭序/兰亭序.mp3","cover":"https://y.qq.com/music/photo_new/T002R300x300M000002Neh8l0uciQZ_1.jpg?max_age=2592000","lrc":"https://npm.elemecdn.com/anzhiyu-music@1.0.1/周杰伦/兰亭序/兰亭序.lrc"},{"name":"说好的辛福呢","artist":"周杰伦","url":"https://npm.elemecdn.com/anzhiyu-music@1.0.2/说好的辛福呢/说好的辛福呢.mp3","cover":"https://y.qq.com/music/photo_new/T002R300x300M000002Neh8l0uciQZ_1.jpg?max_age=2592000","lrc":"https://npm.elemecdn.com/anzhiyu-music@1.0.2/说好的辛福呢/说好的幸福呢.lrc"},{"name":"等你下课 (with 杨瑞代)","artist":"周杰伦","url":"https://npm.elemecdn.com/anzhiyu-music@1.0.1/周杰伦/等你下课/等你下课.mp3","cover":"https://y.qq.com/music/photo_new/T002R300x300M000003bSL0v4bpKAx_1.jpg?max_age=2592000","lrc":"https://npm.elemecdn.com/anzhiyu-music@1.0.1/周杰伦/等你下课/等你下课.lrc"},{"name":"我落泪情绪零碎","artist":"周杰伦","url":"https://npm.elemecdn.com/anzhiyu-music@1.0.2/我落泪情绪零碎/我落泪情绪零碎.mp3","cover":"https://y.qq.com/music/photo_new/T002R300x300M000000bviBl4FjTpO_1.jpg?max_age=2592000","lrc":"https://npm.elemecdn.com/anzhiyu-music@1.0.2/我落泪情绪零碎/我落泪情绪零碎.lrc"},{"name":"听妈妈的话","artist":"周杰伦","url":"https://npm.elemecdn.com/anzhiyu-music@1.0.2/听妈妈的话/听妈妈的话.mp3","cover":"https://y.qq.com/music/photo_new/T002R300x300M000002jLGWe16Tf1H_1.jpg?max_age=2592000","lrc":"https://npm.elemecdn.com/anzhiyu-music@1.0.2/听妈妈的话/听妈妈的话.lrc"},{"name":"明明就","artist":"周杰伦","url":"https://npm.elemecdn.com/anzhiyu-music-jay@1.0.1/明明就/明明就.flac","cover":"https://y.qq.com/music/photo_new/T002R300x300M000003Ow85E3pnoqi_1.jpg?max_age=2592000","lrc":"https://npm.elemecdn.com/anzhiyu-music-jay@1.0.1/明明就/明明就.lrc"},{"name":"我是如此相信","artist":"周杰伦","url":"https://npm.elemecdn.com/anzhiyu-music-jay@1.0.1/我是如此相信/我是如此相信.flac","cover":"https://y.qq.com/music/photo_new/T002R300x300M000001hGx1Z0so1YX_1.jpg?max_age=2592000","lrc":"https://npm.elemecdn.com/anzhiyu-music-jay@1.0.1/我是如此相信/我是如此相信.lrc"},{"name":"发如雪","artist":"周杰伦","url":"https://npm.elemecdn.com/anzhiyu-music@1.0.3/发如雪/发如雪.mp3","cover":"https://y.qq.com/music/photo_new/T002R300x300M0000024bjiL2aocxT_3.jpg?max_age=2592000","lrc":"https://npm.elemecdn.com/anzhiyu-music@1.0.3/发如雪/发如雪.lrc"},{"name":"以父之名","artist":"周杰伦","url":"https://npm.elemecdn.com/anzhiyu-music@1.0.3/以父之名/以父之名.mp3","cover":"https://y.qq.com/music/photo_new/T002R300x300M000000MkMni19ClKG_3.jpg?max_age=2592000","lrc":"https://npm.elemecdn.com/anzhiyu-music@1.0.3/以父之名/以父之名.lrc"},{"name":"园游会","artist":"周杰伦","url":"https://npm.elemecdn.com/anzhiyu-music@1.0.3/园游会/园游会.flac","cover":"https://y.qq.com/music/photo_new/T002R300x300M000003DFRzD192KKD_1.jpg?max_age=2592000","lrc":"https://npm.elemecdn.com/anzhiyu-music@1.0.3/园游会/园游会.lrc"},{"name":"本草纲目","artist":"周杰伦","url":"https://npm.elemecdn.com/anzhiyu-music@1.0.4/本草纲目/本草纲目.mp3","cover":"https://y.qq.com/music/photo_new/T002R300x300M000002jLGWe16Tf1H_1.jpg?max_age=2592000","lrc":"https://npm.elemecdn.com/anzhiyu-music@1.0.4/本草纲目/本草纲目.lrc"},{"name":"龙卷风","artist":"周杰伦","url":"https://npm.elemecdn.com/anzhiyu-music@1.0.4/龙卷风/龙卷风.mp3","cover":"https://y.qq.com/music/photo_new/T002R300x300M000000f01724fd7TH_1.jpg?max_age=2592000","lrc":"https://npm.elemecdn.com/anzhiyu-music@1.0.4/龙卷风/龙卷风.lrc"}]]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>友人帐</title>
      <link href="/link/index.html"/>
      <url>/link/index.html</url>
      
        <content type="html"><![CDATA[<h1>我的友链</h1><div class="tabs" id="mylink"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#mylink-1">🙋 butterfly-💭candy</button></li><li class="tab"><button type="button" data-href="#mylink-2">☀️Volantis</button></li><li class="tab"><button type="button" data-href="#mylink-3">🌴General</button></li><li class="tab"><button type="button" data-href="#mylink-4">Fuild</button></li><li class="tab"><button type="button" data-href="#mylink-5">Volantis</button></li><li class="tab"><button type="button" data-href="#mylink-6">Html</button></li><li class="tab"><button type="button" data-href="#mylink-7">Jade</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="mylink-1"><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">离子的杂货铺~</span></span><br><span class="line">  <span class="attr">link:</span> <span class="string">https://loveak.top/</span></span><br><span class="line">  <span class="attr">avatar:</span> <span class="string">https://bu.dusays.com/2023/07/26/64c0758748106.ico</span></span><br><span class="line">  <span class="attr">descr:</span> <span class="string">生活明朗，万物可爱</span></span><br><span class="line">  <span class="attr">siteshot:</span> <span class="string">https://bu.dusays.com/2023/07/26/64c07513293ef.jpg</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="anzhiyufont anzhiyu-icon-arrow-up"></i></button></div><div class="tab-item-content" id="mylink-2"><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;title&quot;</span><span class="punctuation">:</span> <span class="string">&quot;离子的杂货铺~&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;screenshot&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://bu.dusays.com/2023/07/26/64c07513293ef.jpg&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://loveak.top/&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;avatar&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://bu.dusays.com/2023/07/26/64c0758748106.ico&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;生活明朗，万物可爱&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;keywords&quot;</span><span class="punctuation">:</span> <span class="string">&quot;离子&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="anzhiyufont anzhiyu-icon-arrow-up"></i></button></div><div class="tab-item-content" id="mylink-3"><table><thead><tr><th align="left">名称</th><th align="left">数值</th></tr></thead><tbody><tr><td align="left">站点名称</td><td align="left">离子的杂货铺~</td></tr><tr><td align="left">站点截图</td><td align="left"><a href="https://bu.dusays.com/2023/07/26/64c07513293ef.jpg">https://bu.dusays.com/2023/07/26/64c07513293ef.jpg</a></td></tr><tr><td align="left">站点链接</td><td align="left"><a href="https://loveak.top/">https://loveak.top/</a></td></tr><tr><td align="left">站长头像</td><td align="left"><a href="https://bu.dusays.com/2023/07/26/64c0758748106.ico">https://bu.dusays.com/2023/07/26/64c0758748106.ico</a></td></tr><tr><td align="left">站点描述</td><td align="left">生活明朗，万物可爱</td></tr><tr><td align="left">站点关键词</td><td align="left">离子, 个人博客， 生活</td></tr></tbody></table><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="anzhiyufont anzhiyu-icon-arrow-up"></i></button></div><div class="tab-item-content" id="mylink-4"><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> &#123;</span><br><span class="line">    <span class="attr">title:</span> <span class="string">&quot;离子的杂货铺~&quot;</span>,</span><br><span class="line">    <span class="attr">intro:</span> <span class="string">&quot;生活明朗，万物可爱&quot;</span>,</span><br><span class="line">    <span class="attr">link:</span> <span class="string">&quot;https://loveak.top/&quot;</span>,</span><br><span class="line">    <span class="attr">image:</span> <span class="string">&quot;https://bu.dusays.com/2023/07/26/64c07513293ef.jpg&quot;</span>,</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="anzhiyufont anzhiyu-icon-arrow-up"></i></button></div><div class="tab-item-content" id="mylink-5"><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;title&quot;:</span> <span class="string">&quot;离子的杂货铺&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;avatar&quot;:</span> <span class="string">&quot;https://bu.dusays.com/2023/07/26/64c0758748106.ico&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;screenshot&quot;:</span> <span class="string">&quot;https://bu.dusays.com/2023/07/26/64c07513293ef.jpg&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;url&quot;:</span> <span class="string">&quot;https://loveak.top/&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;description&quot;:</span> <span class="string">&quot;生活明朗，万物可爱&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;group&quot;:</span> ,<span class="comment">#根据你的博客来定义</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="anzhiyufont anzhiyu-icon-arrow-up"></i></button></div><div class="tab-item-content" id="mylink-6"><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://loveak.top/&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;external nofollow&quot;</span>&gt;</span>离子-生活明朗<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="anzhiyufont anzhiyu-icon-arrow-up"></i></button></div><div class="tab-item-content" id="mylink-7"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a(href=&#x27;https://loveak.top/&#x27; rel=&quot;external nofollow&quot;) 离子-生活明朗</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="anzhiyufont anzhiyu-icon-arrow-up"></i></button></div></div></div><details class="folding-tag" ><summary> 友情链接页免责声明 </summary>              <div class='content'>              <h2 id="免责声明"><a href="#免责声明" class="headerlink" title="免责声明"></a>免责声明</h2><p>本博客遵守中华人民共和国相关法律。本页内容仅作为方便学习而产生的快速链接的链接方式，对与友情链接中存在的链接、好文推荐链接等均为其他网站。我本人能力有限无法逐个甄别每篇文章的每个字，并无法获知是否在收录后原作者是否对链接增加了违反法律甚至其他破坏用户计算机等行为。因为部分友链网站甚至没有做备案、域名并未做实名认证等，所以友链网站均可能存在风险，请你须知。</p><p>所以在我力所能及的情况下，我会包括但不限于：</p><ol><li>针对收录的博客中的绝大多数内容通过标题来鉴别是否存在有风险的内容</li><li>在收录的友链好文推荐中检查是否存在风险内容</li></ol><p>但是你在访问的时候，仍然无法避免，包括但不限于：</p><ol><li>作者更换了超链接的指向，替换成了其他内容</li><li>作者的服务器被恶意攻击、劫持、被注入恶意内容</li><li>作者的域名到期，被不法分子用作他用</li><li>作者修改了文章内容，增加钓鱼网站、广告等无效信息</li><li>不完善的隐私保护对用户的隐私造成了侵害、泄漏</li></ol><p>最新文章部分为机器抓取，本站作者未经过任何审核和筛选，本着友链信任原则添加的。如果你发现其中包含违反中华人民共和国法律的内容，请及时联系和举报。该友链会被拉黑。</p><p>如果因为从本页跳转给你造成了损失，深表歉意，并且建议用户如果发现存在问题在本页面进行回复。通常会很快处理。如果长时间无法得到处理，建议联系<code>plasloveak@outlook</code>。</p>              </div>            </details><details class="folding-tag" ><summary> 出现问题的友链 </summary>              <div class='content'>              <h2 id="出现问题的友链"><a href="#出现问题的友链" class="headerlink" title="出现问题的友链"></a>出现问题的友链</h2><p>如果友链出现问题会展示在这里，如果已解决问题还请告知。</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># - name: 大锤</span></span><br><span class="line"><span class="comment">#   link: https://dddachui.top</span></span><br><span class="line"><span class="comment">#   avatar: https://img02.anheyu.com/adminuploads/1/2022/09/04/6314070f8005a.webp!linkavatar</span></span><br><span class="line"><span class="comment">#   descr: 运维本是逆天而行,死在路上也很正常</span></span><br><span class="line"><span class="comment">#   siteshot: https://img02.anheyu.com/adminuploads/1/2022/09/04/6314070f5b281.webp</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>              </div>            </details><h2 id="友情链接申请"><a href="#友情链接申请" class="headerlink" title="友情链接申请"></a>友情链接申请</h2><details class="folding-tag" ><summary> ✅ 加入本站友链须知 </summary>              <div class='content'>              <h2 id="本站添加的友链要求"><a href="#本站添加的友链要求" class="headerlink" title="本站添加的友链要求"></a>本站添加的友链要求</h2><ol><li>能够正常访问</li><li>含本站友链</li><li>网站类型为<strong>个人博客</strong></li></ol><p>请（<a onclick="anzhiyu.addFriendLink()" href="#post-comment">点击这里快速添加</a>） 站点信息申请友情链接，申请后在我不忙的时候会统一添加，即使不通过也会给予邮件回复。</p><h2 id="你提交的信息有可能被修改"><a href="#你提交的信息有可能被修改" class="headerlink" title="你提交的信息有可能被修改"></a>你提交的信息有可能被修改</h2><p>如果有修改，我会将修改内容进行告知</p><ol><li>为了友链相关页面和组件的统一性和美观性，可能会对你的昵称进行缩短处理，例如昵称包含<code>博客</code>、<code>XX 的 XX</code>等内容或形式将被简化。</li><li>为了图片加载速度和内容安全性考虑，头像实际展示图片均使用博客自己图床，所以无法收到贵站自己的头像更新，如果有迫切的更改信息需求，请在本页的评论中添加。</li><li>为了保证鱼塘能够正确抓取文章，所有的友链链接要求为博客主页链接，而不是个人主页链接。</li></ol><h2 id="提交友链信息"><a href="#提交友链信息" class="headerlink" title="提交友链信息"></a>提交友链信息</h2><p>为了避免图床问题，建议你将头像存储到贵站图床。</p><ol><li>我的名称: <code>离子的杂货铺~</code></li><li>网站地址: <code>https://loveak.top/</code></li><li>描述: <code>生活明朗，万物可爱</code></li><li>头像: <code>https://bu.dusays.com/2023/07/26/64c0758748106.ico</code></li><li>站点截图: <code>https://bu.dusays.com/2023/07/26/64c07513293ef.jpg</code></li></ol><p>参照以下格式留言 📋 即可。</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">昵称（请勿包含博客等字样）：</span></span><br><span class="line"><span class="string">网站地址（要求博客地址，请勿提交个人主页）：</span></span><br><span class="line"><span class="string">头像图片url（请提供尽可能清晰的图片，我会上传到我自己的图床）：</span></span><br><span class="line"><span class="string">描述：</span></span><br><span class="line"><span class="string">站点截图:(可选)：</span></span><br></pre></td></tr></table></figure><p>示例 📢：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">昵称：离子的杂货铺</span></span><br><span class="line"><span class="string">网站地址：https://loveak.top/</span></span><br><span class="line"><span class="string">头像图片url：https://bu.dusays.com/2023/07/26/64c0758748106.ico</span></span><br><span class="line"><span class="string">描述：生活明朗，万物可爱</span></span><br><span class="line"><span class="string">站点截图:(可选)：https://bu.dusays.com/2023/07/26/64c07513293ef.jpg</span></span><br></pre></td></tr></table></figure><div class="tip faa-horizontal animated"><p>站点截图建议自己提供，尺寸尽量不要大于 300*300。</p><p>未提供站点预览图的，本站会根据贵站链接调用以下 API 自动获取贵站的站点截图。</p><p>对于做了反扒措施的站点，API 获取的将是反扒页面，望知悉。</p></div><p>站点截图建议使用以下 API 获取以匹配本站样式。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://image.thum.io/get/width/400/crop/800/allowJPG/wait/20/anheyu.com/https://&lt;你的域名&gt;/</span><br></pre></td></tr></table></figure>              </div>            </details><ol><li>我的名称: <code>离子的杂货铺</code></li><li>网站地址: <code>https://loveak.top/</code></li><li>描述: <code>生活明朗，万物可爱</code></li><li>头像: <code>https://bu.dusays.com/2023/07/26/64c0758748106.ico</code></li><li>站点截图: <code>https://bu.dusays.com/2023/07/26/64c07513293ef.jpg</code></li></ol><p  style="padding: 0px 0px 0px 0.8rem;">请<strong>勾选</strong>你符合的条件：</p><div id="friendlink_checkboxs" style="padding: 0px 0px 0px 1.6rem;">  <p>    <label class="checkbox"><input type="checkbox" id="checkbox1" onclick="checkForm()">我已添加 <b>离子</b> 博客的友情链接</label>  </p>  <p>    <label class="checkbox"><input type="checkbox" id="checkbox2" onclick="checkForm()">我的链接主体为 <b>个人</b>，网站类型为<b>博客</b></label>  </p>  <p>    <label class="checkbox"><input type="checkbox" id="checkbox3" onclick="checkForm()">我的网站现在可以在中国大陆区域正常访问</label>  </p>  <p>    <label class="checkbox"><input type="checkbox" id="checkbox4" onclick="checkForm()">网站内容符合中国大陆法律法规</label>  </p>  <p>    <label class="checkbox"><input type="checkbox" id="checkbox5" onclick="checkForm()">我的网站可以在1分钟内加载完成首屏</label>  </p></div><script>    var twikooSubmit = document.getElementsByClassName("tk-submit")[0];    if(twikooSubmit) {      twikooSubmit.style.opacity = "0";    }    function checkForm() {        var checkbox1 = document.getElementById("checkbox1");        var checkbox2 = document.getElementById("checkbox2");        var checkbox3 = document.getElementById("checkbox3");        var checkbox4 = document.getElementById("checkbox4");        var checkbox5 = document.getElementById("checkbox5");        var twikooSubmit = document.getElementsByClassName("tk-submit")[0];        if (checkbox1.checked && checkbox2.checked && checkbox3.checked && checkbox4.checked && checkbox5.checked) {            twikooSubmit.style.opacity = "1";            twikooSubmit.style.height = "auto";            twikooSubmit.style.overflow = "auto";            var input = document.getElementsByClassName('el-textarea__inner')[0];            let evt = document.createEvent('HTMLEvents');            evt.initEvent('input', true, true);            input.value = '昵称（请勿包含博客等字样）：\n网站地址（要求博客地址，请勿提交个人主页）：\n头像图片url（请提供尽可能清晰的图片，我会上传到我自己的图床）：\n描述：\n';            input.dispatchEvent(evt);            input.focus();            input.setSelectionRange(-1, -1);        } else {            twikooSubmit.style.opacity = "0";            twikooSubmit.style.height = "0";            twikooSubmit.style.overflow = "hidden";        }    }</script><style>.tk-comments > .tk-submit {  opacity: 0;  height: 0;  transition: opacity 0.5s, height 0.5s;  overflow: hidden;}</style>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>wordScenery</title>
      <link href="/wordScenery/index.html"/>
      <url>/wordScenery/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>标签</title>
      <link href="/tags/index.html"/>
      <url>/tags/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>音乐馆</title>
      <link href="/music/index.html"/>
      <url>/music/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>即刻短文</title>
      <link href="/essay/index.html"/>
      <url>/essay/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
  
</search>
